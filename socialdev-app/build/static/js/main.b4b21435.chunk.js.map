{"version":3,"sources":["utils/validate.js","logic.js","components/landing/Landing.js","components/register/Register.js","components/login/Login.js","components/error/Error.js","components/skills-tag/SkillsTag.js","components/project-card/ProjectCard.js","components/checkbox/Checkbox.js","components/create-project/CreateProject.js","components/home/Home.js","components/filters-collapsible/FiltersCollapsible.js","components/explore/Explore.js","components/profile-card/ProfileCard.js","components/update-profile-form/UpdateProfileForm.js","components/modal/Modalpage.js","components/profile/Profile.js","components/pending-collaborators/PendingCollaborators.js","components/collapse/Collapse.js","components/meetings/Meetings.js","components/collaborator-card/CollaboratorCard.js","components/meetingAttendees/MeetingAttendees.js","components/meet-attendees-modal/MeetingAttendeesModal.js","components/project-page/ProjectPage.js","components/create-meetings/CreateMeeting.js","components/navbar/Navbar.js","components/chatpage/ChatPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","params","forEach","_ref","key","value","type","optional","String","TypeError","concat","trim","length","Error","Boolean","Number","global","sessionStorage","require","validate","logic","_userId","getItem","_token","url","_changeDate","isoDate","cleanDate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","registerUser","name","email","username","password","match","fetch","this","method","headers","Content-Type","body","JSON","stringify","then","res","json","error","authenticate","_this","_res$data","data","id","token","setItem","loggedIn","userId","logout","removeItem","retrieveUserProfile","Authorization","updateProfile","city","githubProfile","bio","skills","Array","listOwnProjects","listCollaboratingProjects","saveProject","projectId","removeSavedProject","listSavedProjects","addNewProject","description","maxMembers","location","filterProjects","query","retrieveProjectInfo","projectid","listProjectMeetings","item","realDate","date","listDate","attendMeetings","meetingId","userUpcomingMeetings","handleCollaboration","decision","collaboratorId","removeCollaborator","retrievePendingCollaboratorProjects","deleteMeeting","attendMeeting","retrieveMeetingInfo","unAttendMeeting","deleteProject","leaveProject","requestCollaboration","cancelCollaborationRequest","addMeeting","startDate","addProfileImage","file","avatar","FormData","append","addProjectImage","retrieveProfileImage","width","height","retrieveProjectImage","findConversation","receiverId","sendMessage","senderId","text","listMessages","user2Id","listConversations","_this2","map","arr","members","filter","push","conversationId","pendingMessages","lastMessage","messages","sent","Landing","props","react_default","a","createElement","className","mdbreact","color","onClick","onLoginClick","onRegisterClick","aria-hidden","Register","state","handleSubmit","event","preventDefault","_this$state","onRegister","handleNameChange","target","setState","handleEmailChange","handleUsernameChange","handlePasswordChange","onSubmit","placeholder","onChange","onSkipToLogin","Component","Login","onLogin","onSkipToRegister","message","SkillsTag","skill","searchTag","viewerSkills","includes","withRouter","project","addToFavourites","from","style","margin","src","projectImage","waves","index","skills_tag_SkillsTag","pill","Link","to","owner","collaborators","some","userSavedProjects","Checkbox","isChecked","toggleCheckboxChange","_this$props","handleCheckboxChange","label","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","selected","Symbol","iterator","next","done","err","return","checked","CreateProject","toggleSuccess","skillsArray","selectedCheckboxes","checkbox","backToMyProject","catch","componentWillMount","Set","toggleCheckbox","has","delete","add","onProjectNameChange","onProjectDescriptionChange","onMaxMembersChange","onLocationChange","renderDropDown","disabled","error_Error","rows","checkbox_Checkbox","Home","tabIndex","collabProjects","ownProjects","savedProjects","user","sendToMyProjects","handleTabChange","window","scrollTo","handleSearchTag","searchQuery","history","userName","_this3","esm","selectedIndex","onSelect","project_card_ProjectCard","create_project_CreateProject","FiltersCollapsible","collapse","pendingCollaborators","toggle","marginBottom","isOpen","Explore","searchResults","cityQuery","recommended","queryListen","onCityFilterChange","onSearchNameQueryChange","handleAddToFavourites","action","renderSearchArea","join","Math","floor","random","_this4","aria-label","filters_collapsible_FiltersCollapsible","ProfileCard","myProjects","showCollabProjects","projectsStarted","uploadImage","meetings","numberOfMeetings","chats","totalPending","joinDate","dist_default","format","encType","profileImage","UpdateProfileForm","_callee","regenerator_default","wrap","_context","prev","t0","finish","toggleModal","stop","onCityChange","onGithubChange","onBioChange","_props$user","defaultValue","Modalpage","modal","update_profile_form_UpdateProfileForm","Profile","upComingMeetings","showProjects","image","loading","chatPopup","chatMessage","conversations","sendProfileUpdate","github","handleShowCollabProjects","handleshowOwnProjects","handleUpComingMeetings","result","handleShowChats","renderTitle","goToMeetingProject","handleChatStart","onChatMessageChange","handleChatSubmit","_assertThisInitialize","Object","assertThisInitialized","_assertThisInitialize2","handleUpload","files","Promise","all","total","_this$state2","lib_default","profile_card_ProfileCard","modal_Modalpage","href","meeting","attending","conversation","alt","PendingCollaborators","clickName","accept","reject","Collapsible","pendingCollabs","collaborator","pending_collaborators_PendingCollaborators","Meetings","find","CollaboratorCard","ownerId","MeetingAttendees","attendee","MeetingAttendeesModal","meetingAttendees_MeetingAttendees","clickProfileName","ProjectPage","commonInterestToggle","acceptCollabHandle","rejectCollabHandle","handleDeleteMeeting","handleAttendMeeting","handleUnAttendMeeting","handleDeleteProject","handleLeaveProject","handleRequestCollaboration","_this$props2","handleCancelCollaboration","_this$props3","handleSaveProject","_this$props4","handleUnFollowProjects","_this$props5","handleRemoveCollaborator","renderCollabButtons","calculateCommonInterests","indexOf","toFixed","renderCapacityCircles","i","parseInt","currentMembers","toggleCommonInterests","renderFavouritesButtons","_assertThisInitialize3","viewerSavedProjects","getImageId","handleAddNewEvent","align","collaborator_card_CollaboratorCard","Collapse","sort","b","meetings_Meetings","meet_attendees_modal_MeetingAttendeesModal","CreateMeeting","handleChange","onDescriptionChange","cid","es","showTimeSelect","dateFormat","Navbarpage","home","explore","profile","pendingNotifications","sendToConversation","onLogoClick","onHomeClick","onExploreClick","onProfileClick","handleLogout","reload","renderMessageIcon","toggleCollapse","pathname","dark","expand","navbar","React","ChatPage","receiverName","totalPendingMessages","receiverImage","handleSendMessage","scrollToBottom","messageList","refs","maxScrollTop","scrollHeight","clientHeight","ReactDOM","scrollTop","onMessageChange","renderMessageTicks","status","receiver","toConsumableArray","nextProps","ref","sender","App","handleRegisterClick","handleLoginClick","handleSkipToLogin","handleSkipToRegister","handleRegister","handleLogin","handleUserName","handlePendingNotifications","Navbar","Switch","Route","exact","path","render","Redirect","landing_Landing","register_Register","login_Login","home_Home","explore_Explore","project_page_ProjectPage","profile_Profile","assign","create_meetings_CreateMeeting","chatpage_ChatPage","receiverid","hostname","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4b21435.chunk.js","sourcesContent":["// const { ValueError } = require('../errors')\n\nfunction validate(params) {\n    params.forEach(({ key, value, type, optional }) => {\n        switch (type) {\n            case String:\n                if (optional && value === null) break\n\n                if (typeof value !== 'string') throw TypeError(`${value} is not a string`)\n\n                if (!value.trim().length) throw new Error(`${key} is empty or blank`)\n\n                break\n            case Boolean:\n                if (optional && value === null) break\n\n                if (typeof value !== 'boolean') throw TypeError(`${value} is not a boolean`)\n\n                break\n            case Number:\n                if (optional && value === null) break\n\n                if (typeof value !== 'number') throw TypeError(`${value} is not a number`)\n        }\n    })\n}\n\nmodule.exports = validate","global.sessionStorage = require('sessionstorage')\nconst validate = require('./utils/validate')\nconst logic = {\n    _userId: sessionStorage.getItem('userId') || null,\n    _token: sessionStorage.getItem('token') || null,\n\n    url: 'NO-URL',\n\n    _changeDate(isoDate, type) {\n\n        let cleanDate = new Date(isoDate)\n        if (type === 'meeting') {\n\n            return `${cleanDate.getDate()}-${cleanDate.getMonth()}-${cleanDate.getFullYear()} at ${cleanDate.getHours()}:${cleanDate.getMinutes()}:${cleanDate.getSeconds()}`\n\n        } else {\n\n            return `${cleanDate.getDate()}-${cleanDate.getMonth()}-${cleanDate.getFullYear()}`\n        }\n\n    },\n    /**\n     * Registers a user\n     * @param {string} name \n     * @param {string} email \n     * @param {string} username \n     * @param {string} password \n     */\n    registerUser(name, email, username, password) {\n        if (typeof name !== 'string') throw TypeError(`${name} is not a string`)\n        if (typeof email !== 'string') throw TypeError(`${email} is not a string`)\n        if (email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@“]+(\\.[^<>()\\[\\]\\\\.,;:\\s@“]+)*)|(“.+“))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) === null) throw Error(`${email} is an invalid email`)\n        if (typeof username !== 'string') throw TypeError(`${username} is not a string`)\n        if (typeof password !== 'string') throw TypeError(`${password} is not a string`)\n\n        if (!name.trim()) throw Error('name is empty or blank')\n        if (!email.trim()) throw Error('email is empty or blank')\n        if (!username.trim()) throw Error('username is empty or blank')\n        if (!password.trim()) throw Error('password is empty or blank')\n\n        return fetch(`${this.url}/users`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify({ name, email, username, password })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n    /**\n     * Allow a user to log in\n     * @param {string} username \n     * @param {string} password \n     */\n    authenticate(username, password) {\n        if (typeof username !== 'string') throw TypeError(`${username} is not a string`)\n        if (typeof password !== 'string') throw TypeError(`${password} is not a string`)\n\n        if (!username.trim()) throw Error('username is empty or blank')\n        if (!password.trim()) throw Error('password is empty or blank')\n\n        return fetch(`${this.url}/auth`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify({ username, password })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                const { id, token } = res.data\n\n                this._userId = id\n                this._token = token\n\n                sessionStorage.setItem('userId', id)\n                sessionStorage.setItem('token', token)\n\n                return res\n            })\n    },\n\n    get loggedIn() {\n        return !!this._userId\n    },\n\n    get userId() {\n        return this._userId\n    },\n    /**\n     * User logout\n     */\n    logout() {\n        this._userId = null\n        this._token = null\n\n        sessionStorage.removeItem('userId')\n        sessionStorage.removeItem('token')\n    },\n    /**\n     * Retrieves the user profile\n     * @param {*} id \n     */\n    retrieveUserProfile(id) {\n        \n        return fetch(`${this.url}/user-profile/${id || this._userId}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n\n    /**\n     * Update profile information. Not all fields are required\n     * @param {skills} id \n     * @param {skills} city \n     * @param {skills} githubProfile \n     * @param {skills} bio \n     * @param {Array} skills \n     */\n    updateProfile(id, city, githubProfile, bio, skills) {\n        validate([\n            { key: 'id', value: id, type: String },\n            { key: 'bio', value: bio, type: String, optional: true },\n            { key: 'githubProfile', value: githubProfile, type: String, optional: true },\n            { key: 'city', value: city, type: String, optional: true },\n            { key: 'skills', value: skills, type: Array, optional: true }\n        ])\n\n\n        return fetch(`${this.url}/user-profile/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n            body: JSON.stringify({ city, githubProfile, bio, skills })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n\n    /**\n     * Lists own projects\n     * @param {string} id \n     */\n    listOwnProjects(id) {\n\n        return fetch(`${this.url}/users/projects/${id || this._userId}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n\n    /**\n     * Lists projects a user is collaborating in\n     * @param {string} id \n     */\n    listCollaboratingProjects(id) {\n\n        return fetch(`${this.url}/users/${id || this._userId}/collaborating`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n\n    /**\n     * Saves a project\n     * @param {string} projectId \n     */\n    saveProject(projectId) {\n        if (typeof projectId !== 'string') throw TypeError(`${projectId} is not a string`)\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/save`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n\n                if (res.error) throw Error(res.error)\n\n            })\n    },\n\n    /**\n     * Removes a saved project \n     * @param {string} projectId \n     */\n    removeSavedProject(projectId) {\n        if (typeof projectId !== 'string') throw TypeError(`${projectId} is not a string`)\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/save`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n            })\n    },\n\n    /**\n     * Lists saved projects for a user\n     */\n    listSavedProjects() {\n        return fetch(`${this.url}/users/${this._userId}/projects/save`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n\n    /**\n     * Adds a new project\n     * @param {string} name \n     * @param {string} description \n     * @param {Array} skills \n     * @param {string} maxMembers \n     * @param {string} location \n     */\n    addNewProject(name, description, skills, maxMembers, location) {\n        if (typeof name !== 'string') throw TypeError(`${name} is not a string`)\n        if (typeof description !== 'string') throw TypeError(`${description} is not a string`)\n        if (!(skills instanceof Array)) throw TypeError(`${skills} is not an array`)\n        if (typeof maxMembers !== 'string') throw TypeError(`${maxMembers} is not a string`)\n        if (typeof location !== 'string') throw TypeError(`${location} is not a string`)\n\n        if (!name.trim()) throw Error('name is empty or blank')\n        if (!description.trim()) throw Error('description is empty or blank')\n        if (!maxMembers.trim()) throw Error('maxMembers is empty or blank')\n        if (!location.trim()) throw Error('location is empty or blank')\n\n\n        return fetch(`${this.url}/users/${this._userId}/projects`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n            body: JSON.stringify({ name, description, skills, maxMembers, location })\n        })\n            .then(res => res.json())\n            .then(res => {\n\n                if (res.error) throw Error(res.error)\n\n            })\n    },\n\n\n\n    /**\n     * Filters a project based on a user query\n     * @param {string} query \n     */\n    filterProjects(query) {\n\n        if (typeof query !== 'string') throw TypeError(`${query} is not a string`)\n        if (!query.trim()) throw Error('query is empty or blank')\n        return fetch(`${this.url}/users/${this._userId}/projects/filter/${query}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n\n    },\n    /**\n     * Retrieves information of a given project\n     * @param {string} projectid \n     */\n    retrieveProjectInfo(projectid) {\n\n        if (typeof projectid !== 'string') throw TypeError(`${projectid} is not a string`)\n        if (!projectid.trim()) throw Error('projectid is empty or blank')\n        return fetch(`${this.url}/users/${this._userId}/project/${projectid}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n\n    /**\n     * Lists the meetings that belong to a project\n     * @param {string} projectid \n     */\n    listProjectMeetings(projectid) {\n        if (typeof projectid !== 'string') throw TypeError(`${projectid} is not a string`)\n        if (!projectid.trim()) throw Error('projectid is empty or blank')\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectid}/meetings`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                res.data.forEach(item => {\n                    item.realDate = new Date(item.date)\n                    item.listDate = logic._changeDate(item.date, 'meeting')\n                })\n\n                return res.data\n            })\n    },\n\n    /**\n     * Allows user to attend meetings\n     * @param {string} meetingId \n     */\n    attendMeetings(meetingId) {\n        if (typeof meetingId !== 'string') throw TypeError(`${meetingId} is not a string`)\n        if (!meetingId.trim()) throw Error('meetingId is empty or blank')\n        return fetch(`${this.url}/users/${this._userId}/projects/${meetingId}/meetings`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n\n    /**\n     * Retrieves upcoming meetings for a user\n     * @param {string} id \n     */\n    userUpcomingMeetings(id) {\n        if (typeof id !== 'string') throw TypeError(`${id} is not a string`)\n        if (!id.trim()) throw Error('id is empty or blank')\n        return fetch(`${this.url}/users/${id || this._userId}/meetings`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n\n    },\n\n    /**\n     *  Handles the collaboration decision for a project\n     * @param {string} projectid \n     * @param {string} decision \n     * @param {string} collaboratorId \n     */\n    handleCollaboration(projectid, decision, collaboratorId) {\n        if (typeof decision !== 'string') throw TypeError(`${decision} is not a string`)\n        if (!decision.trim()) throw Error('decision is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectid}/collaborator`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n            body: JSON.stringify({ decision, collaboratorId })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n\n    /**\n     * Removes a collaborator from a project\n     * @param {*} collaboratorId \n     * @param {*} projectId \n     */\n    removeCollaborator(collaboratorId, projectId) {\n        if (typeof collaboratorId !== 'string') throw TypeError(`${collaboratorId} is not a string`)\n        if (!collaboratorId.trim()) throw Error('collaboratid is empty or blank')\n        if (typeof projectId !== 'string') throw TypeError(`${projectId} is not a string`)\n        if (!projectId.trim()) throw Error('projectId is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/removecollaborator`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n            body: JSON.stringify({ collaboratorId })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n    /**\n     * Retrieves projects that have pending collaborators\n     * @param {string} id \n     */\n    retrievePendingCollaboratorProjects(id) {\n        if (typeof id !== 'string') throw TypeError(`${id} is not a string`)\n        if (!id.trim()) throw Error('id is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId || id}/pendingcollaborators`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n    /**\n     * Delete meeting \n     * @param {string} meetingId \n     */\n    deleteMeeting(meetingId) {\n\n        return fetch(`${this.url}/users/${this._userId}/projects/meetings/${meetingId}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n    /**\n     * Attend meeting\n     * @param {string} meetingId \n     */\n    attendMeeting(meetingId) {\n        if (typeof meetingId !== 'string') throw TypeError(`${meetingId} is not a string`)\n        if (!meetingId.trim()) throw Error('meetingId is empty or blank')\n        return fetch(`${this.url}/users/${this._userId}/projects/meetings/${meetingId}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n    /**\n     * Retrieve info of a meeting\n     * @param {string} meetingId \n     */\n    retrieveMeetingInfo(meetingId) {\n        if (typeof meetingId !== 'string') throw TypeError(`${meetingId} is not a string`)\n        if (!meetingId.trim()) throw Error('meetingId is empty or blank')\n        return fetch(`${this.url}/users/${this._userId}/meeting/${meetingId}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n\n    },\n    /**\n     * Leave a meeting\n     * @param {string} meetingId \n     */\n    unAttendMeeting(meetingId) {\n        if (typeof meetingId !== 'string') throw TypeError(`${meetingId} is not a string`)\n        if (!meetingId.trim()) throw Error('meetingId is empty or blank')\n        return fetch(`${this.url}/users/${this._userId}/projects/meetings/${meetingId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n    /**\n     * Delete a project\n     * @param {string} userId \n     * @param {string} projectId \n     */\n    deleteProject(userId, projectId) {\n        if (typeof userId !== 'string') throw TypeError(`${userId} is not a string`)\n        if (typeof projectId !== 'string') throw TypeError(`${projectId} is not a string`)\n\n        if (!userId.trim()) throw Error('userId is empty or blank')\n        if (!projectId.trim()) throw Error('projectId is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId}/deleteproject/${projectId}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n\n    /**\n     * Leave a project\n     * @param {string} projectId \n     */\n    leaveProject(projectId) {\n        if (typeof projectId !== 'string') throw TypeError(`${projectId} is not a string`)\n\n        if (!projectId.trim()) throw Error('projectId is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/leave`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n    },\n\n    /**\n     * Request to collaborate in a project\n     * @param {*} projectId \n     * @param {*} collaboratorId \n     */\n    requestCollaboration(projectId, collaboratorId) {\n        if (typeof projectId !== 'string') throw TypeError(`${projectId} is not a string`)\n        if (typeof collaboratorId !== 'string') throw TypeError(`${collaboratorId} is not a string`)\n\n        if (!projectId.trim()) throw Error('projectId is empty or blank')\n        if (!collaboratorId.trim()) throw Error('collaboratorId is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/collaborator`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n            body: JSON.stringify({ collaboratorId })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n\n\n    },\n    /**\n     * Cancels the collaboration request\n     * @param {string} projectId \n     * @param {string} collaboratorId \n     */\n    cancelCollaborationRequest(projectId, collaboratorId) {\n        if (typeof projectId !== 'string') throw TypeError(`${projectId} is not a string`)\n        if (typeof collaboratorId !== 'string') throw TypeError(`${collaboratorId} is not a string`)\n\n        if (!projectId.trim()) throw Error('projectId is empty or blank')\n        if (!collaboratorId.trim()) throw Error('collaboratorId is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/collaborator`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n            body: JSON.stringify({ collaboratorId })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n\n\n    },\n\n    /**\n     * Adds a meeting\n     * @param {string} userId \n     * @param {string} projectId \n     * @param {string} startDate \n     * @param {string} location \n     * @param {string} description \n     */\n    addMeeting(userId, projectId, startDate, location, description) {\n        if (typeof userId !== 'string') throw TypeError(`${userId} is not a string`)\n        if (typeof projectId !== 'string') throw TypeError(`${projectId} is not a string`)\n        if (!(startDate instanceof Date)) throw TypeError(`${startDate} is not a date`)\n        if (typeof location !== 'string') throw TypeError(`${location} is not a string`)\n        if (typeof description !== 'string') throw TypeError(`${description} is not a string`)\n\n        if (!userId.trim()) throw Error('userId is empty or blank')\n        if (!projectId.trim()) throw Error('projectId is empty or blank')\n        if (!location.trim()) throw Error('location is empty or blank')\n        if (!description.trim()) throw Error('description is empty or blank')\n\n        if (new Date() > startDate) throw Error('cannot create a meeting in the past')\n\n\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/meetings`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n            body: JSON.stringify({ startDate, location, description })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n            })\n\n\n    },\n\n\n    /**\n     * Adds a profile image\n     * @param {Object} file \n     */\n    addProfileImage(file) {\n        let avatar = new FormData()\n\n        avatar.append('avatar', file)\n\n        return fetch(`${this.url}/users/${this._userId}/photo`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            },\n            body: avatar\n        })\n            .then(res => res.json())\n            .then(res => {\n\n            })\n    },\n\n    /**\n     * Add a project image\n     * @param {string} file \n     * @param {string} projectId \n     */\n    addProjectImage(file, projectId) {\n        let avatar = new FormData()\n\n        avatar.append('avatar', file)\n\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/photo`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            },\n            body: avatar\n        })\n            .then(res => res.json())\n            .then(res => {\n\n\n                return res.data\n            })\n    },\n    /**\n     * \n     * @param {string} id \n     * @param {string} width \n     * @param {string} height \n     * @returns {Promise <Object>}\n     */\n    retrieveProfileImage(id, width, height) {\n        if (typeof id !== 'string') throw TypeError(`${id} is not a string`)\n        if (!id.trim()) throw Error('id is empty or blank')\n\n        return fetch(`${this.url}/users/${id}/photo/width/${width}/height/${height}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n    /**\n     * Retrieves the information of the project\n     * @param {string} id \n     * @param {string} projectId \n     * @returns {Promise <Object>}\n     */\n    retrieveProjectImage(id, projectId) {\n\n        if (typeof id !== 'string') throw TypeError(`${id} is not a string`)\n        if (!id.trim()) throw Error('id is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId}/projects/${projectId}/photos`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n\n    /**\n     * Find and retrieve the conversation for two members\n     * @param {string} receiverId \n     * @returns {Promise <Object>}\n     */\n    findConversation(receiverId) {\n        if (typeof receiverId !== 'string') throw TypeError(`${receiverId} is not a string`)\n        if (!receiverId.trim()) throw Error('receiverId is empty or blank')\n        return fetch(`${this.url}/users/${this._userId}/chat/${receiverId}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n\n    },\n\n    /**\n     * Adds the new message to the database\n     * @param {string} senderId \n     * @param {string} receiverId \n     * @param {string} text \n     */\n    sendMessage(senderId, receiverId, text) {\n        if (typeof senderId !== 'string') throw TypeError(`${senderId} is not a string`)\n        if (!senderId.trim()) throw Error('senderId is empty or blank')\n        if (typeof receiverId !== 'string') throw TypeError(`${receiverId} is not a string`)\n        if (!receiverId.trim()) throw Error('Why are you sending a blank message?')\n        if (typeof text !== 'string') throw TypeError(`${text} is not a string`)\n        if (!text.trim()) throw Error('Why are you sending a blank message?')\n\n        return fetch(`${this.url}/users/${this._userId}/message`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': `Bearer ${this._token}`\n\n            },\n            body: JSON.stringify({ receiverId, text })\n        })\n            .then(res => res.json())\n            .then(res => {\n\n                if (res.error) throw Error(res.error)\n            })\n    },\n\n    /**\n     * Lists the messages for a specific conversation\n     * @param {string} user2Id \n     * @returns {}\n     */\n    listMessages(user2Id) {\n\n        \n        if (typeof user2Id !== 'string') throw TypeError(`${user2Id} is not a string`)\n        if (!user2Id.trim()) throw Error('user2Id is empty or blank')\n\n        return fetch(`${this.url}/users/${this._userId}/message/${user2Id}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                return res.data\n            })\n    },\n\n    /**\n     * Lists the conversations for the user that is logged in\n     * @returns {Promise <Object>}\n     */\n    listConversations() {\n\n        return fetch(`${this.url}/users/${this._userId}/chats`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${this._token}`\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) throw Error(res.error)\n\n                const output = res.data.map(item => {\n                    const arr = item.members.filter(item => item.id !== this._userId)\n                    arr.push({ conversationId: item.id, pendingMessages: item.pendingMessages, lastMessage: new Date(item.messages[item.messages.length-1].sent) })\n\n                    return arr\n                })\n\n                return output\n            })\n    }\n}\n\n// export default logic\nmodule.exports = logic","import React from 'react'\nimport './landing.css'\nimport { Button } from 'mdbreact'\n\nconst Landing = props => {\n    return (\n        <div>\n            <div className=\"top-area-landing\">\n                <div className=\"img-container\">\n                    <div className=\"title-container\">\n                        <h1>SocialDev</h1>\n                        <div className=\"buttons-container\">\n                            <Button color=\"blue\"  onClick={props.onLoginClick} >Login</Button>\n                            <Button color=\"blue\" onClick={props.onRegisterClick}>Register</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"app-info\">\n                <div className=\"app-info__detail explore\">\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    <h2>Find a project that you would like to collaborate in</h2>\n                </div>\n                <div className=\"app-info__detail meet\">\n                    <i className=\"fa fa-group\" aria-hidden=\"true\"></i>\n                    <h2>Meet like-minded colleagues </h2>\n                </div>\n                <div className=\"app-info__detail develop\">\n                    <i className=\"fa fa-code\" aria-hidden=\"true\"></i>\n                    <h2>Do what you know best and make cool projects!</h2>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Landing","import React, { Component } from 'react'\nimport './register.css'\nimport { Button } from 'mdbreact'\n\nclass Register extends Component {\n    state = {\n        name: '',\n        email: '',\n        username: '',\n        password: ''\n    }\n\n    handleSubmit = event => {\n\n        event.preventDefault()\n\n        const { name, email, username, password } = this.state\n\n        this.props.onRegister(name, email, username, password)\n    }\n\n    handleNameChange = (event) => {\n\n        const name = event.target.value\n\n        this.setState({ name })\n    }\n\n    handleEmailChange = (event) => {\n\n        const email = event.target.value\n\n        this.setState({ email })\n    }\n\n    handleUsernameChange = (event) => {\n\n        const username = event.target.value\n\n        this.setState({ username })\n    }\n\n    handlePasswordChange = (event) => {\n\n        const password = event.target.value\n\n        this.setState({ password })\n    }\n\n    render() {\n        return <div className=\"background-container\">\n            <section className=\"form-container\">\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input className=\"input-group-text form__input\" placeholder=\"name\" type=\"text\" onChange={this.handleNameChange} />\n                    <input className=\"input-group-text form__input\" placeholder=\"email\" type=\"text\" onChange={this.handleEmailChange} />\n                    <input className=\"input-group-text form__input\" placeholder=\"username\" type=\"text\" onChange={this.handleUsernameChange} />\n                    <input className=\"input-group-text form__input\" placeholder=\"password\" type=\"password\" onChange={this.handlePasswordChange} />\n                    <Button color=\"blue\" type=\"submit\">Register</Button>\n                </form>\n                <p className=\"go-back\">Already have an account? <button onClick={this.props.onSkipToLogin} className=\"go-back__button\" type=\"button\">Log in</button></p>\n            </section>\n        </div>\n    }\n}\n\nexport default Register\n","import React, { Component } from 'react'\nimport { Button } from 'mdbreact'\nimport './login.css'\n\n\nclass Login extends Component {\n\n    state = {\n        username: '',\n        password: ''\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault()\n\n        const { username, password } = this.state\n\n        this.props.onLogin(username, password)\n    }\n\n    handleUsernameChange = (event) => {\n\n        const username = event.target.value\n\n        this.setState({ username })\n    }\n\n    handlePasswordChange = (event) => {\n        const password = event.target.value\n\n        this.setState({ password })\n    }\n\n\n    render() {\n        return <div className=\"background-container\">\n            <section className=\"form-container\">\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input className=\"input-group-text form__input\" placeholder=\"username\" type=\"text\" onChange={this.handleUsernameChange} />\n                    <input className=\"input-group-text form__input\" placeholder=\"password\" type=\"password\" onChange={this.handlePasswordChange} />\n                    <Button color=\"blue\" type=\"submit\">Log in</Button>\n                </form>\n                <p className=\"go-back\">Don't have an account? <button onClick={this.props.onSkipToRegister} className=\"go-back__button\"  type=\"button\">Sign up</button></p>\n            </section>\n        </div>\n    }\n\n}\n\nexport default Login","import React from 'react'\nimport './error.css'\n\nconst Error = props => {\n\n  return <div className=\"alert alert-danger\">\n    <strong>{props.message}!</strong>\n  </div>\n\n}\n\nexport default Error","import React from 'react'\nimport './skillstag.css'\nconst SkillsTag = props => {\n    const { skill, searchTag, viewerSkills } = props\n\n    if (viewerSkills && skill) {\n        return (\n            <button onClick={() => searchTag(skill)} className={(viewerSkills.includes(skill) ? \"skills-tag-match\" : \"skills-tag\")} type=\"button\">{skill}</button>\n        )\n    }\n    if (skill) {\n        return (\n            <button onClick={() => searchTag(skill)} className=\"skills-tag\" type=\"button\">{skill}</button>\n        )\n    } else return null\n\n\n}\n\nexport default SkillsTag","import React from 'react'\nimport { Button, Card, CardBody, CardImage, CardTitle } from 'mdbreact';\nimport { withRouter, Link } from 'react-router-dom'\nimport SkillsTag from '../skills-tag/SkillsTag'\nimport './projectcard.css'\n\nconst ProjectCard = props => {\n    const { project, searchTag, addToFavourites, userId, from } = props\n\n    if (project) {\n        return (\n            <Card style={{ width: (from === 'profile' || from === 'home') ? \"19rem\" : \"16rem\", margin: \"20px\" }}>\n                <CardImage\n                    className=\"img-fluid\"\n                    src={project.projectImage}\n                    style={{ height: \"180px\", width: \"100%\" }}\n                    waves\n                \n                />\n                <CardBody>\n                    <CardTitle>{project.name}</CardTitle>\n\n                    <p>Location: {project.location}</p>\n                    {project.skills.map((skill, index) => <SkillsTag searchTag={searchTag} key={index} skill={skill} pill />)}\n                    <div className=\"card-bottom-area\">\n                        <Link to={`/project/${project.id}`}><Button color=\"primary\" type=\"button\" >View Project</Button></Link>\n                        {(project.owner !== userId) && (!project.collaborators.some(item => item.id !== userId)) && project.userSavedProjects && <button className=\"project-card-save-button\" onClick={() => addToFavourites(project.id, project.userSavedProjects.includes(project.id) ? 'remove' : 'add')}><i className={project.userSavedProjects.includes(project.id) ? \"fa fa-heart\" : \"fa fa-heart-o\"} aria-hidden=\"true\"></i></button>}\n                    </div>\n\n                </CardBody>\n            </Card>\n\n        )\n    } else return null\n\n\n\n}\n\nexport default withRouter(ProjectCard)","import React, { Component } from 'react'\n\nclass Checkbox extends Component {\n    state = {\n        isChecked: false\n    }\n\n    componentDidMount() {\n\n        for (const checkbox of this.props.selected) {\n\n            if (checkbox === this.props.label) {\n                this.setState({isChecked: true})\n            }\n\n        }\n    }\n\n    toggleCheckboxChange = () => {\n        const { handleCheckboxChange, label } = this.props;\n\n        this.setState(({ isChecked }) => (\n            {\n                isChecked: !isChecked,\n            }\n        ));\n\n        handleCheckboxChange(label);\n    }\n\n    render() {\n\n        const { label } = this.props;\n        const { isChecked } = this.state;\n\n        return (\n            <div className=\"checkbox\">\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        value={label}\n                        checked={isChecked}\n                        onChange={this.toggleCheckboxChange}\n                    />\n\n                    {label}\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default Checkbox","import React, { Component } from 'react'\nimport { Button } from 'mdbreact'\nimport Checkbox from '../checkbox/Checkbox'\nimport logic from '../../logic'\nimport './create-project.css'\nimport Error from '../error/Error'\nconst skills = [\n    'Angular',\n    'C-Sharp',\n    'Java',\n    'Javascript',\n    'Mongoose',\n    'PHP',\n    'Python',\n    'React',\n    'Ruby',\n    'SQL',\n    'Swift',\n    'Vue',\n]\n\nclass CreateProject extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        maxMembers: '1',\n        error: false,\n        toggleSuccess: false,\n        location: '',\n   \n\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        let skillsArray = []\n\n        for (const checkbox of this.selectedCheckboxes) {\n\n            skillsArray.push(checkbox)\n\n        }\n\n        const { name, description, maxMembers, location } = this.state\n\n        try {\n            return logic.addNewProject(name, description, skillsArray, maxMembers, location)\n                .then(() => this.setState({ error: false, toggleSuccess: !this.state.toggleSuccess }))\n                .then(() => this.props.backToMyProject())\n                .catch(err => this.setState({error: err.message}))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n\n    }\n\n    componentWillMount = () => {\n\n        this.selectedCheckboxes = new Set();\n\n    }\n\n    toggleCheckbox = label => {\n\n        if (this.selectedCheckboxes.has(label)) {\n\n            this.selectedCheckboxes.delete(label);\n\n        } else {\n\n            this.selectedCheckboxes.add(label);\n        }\n    }\n\n    onProjectNameChange = event => {\n        const name = event.target.value\n\n        this.setState({ name, error: false })\n    }\n\n    onProjectDescriptionChange = event => {\n        const description = event.target.value\n\n        this.setState({ description, error: false })\n    }\n\n    onMaxMembersChange = event => {\n        const maxMembers = event.target.value\n\n        this.setState({ maxMembers, error: false })\n    }\n\n    onLocationChange = event => {\n\n        const location = event.target.value\n        this.setState({ location, error: false })\n    }\n\n    renderDropDown = () => {\n        var members = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n        return members.map((item, index) => <option key={index} disabled={(index===0) ? 'disabled' : false} value={item}>{item}</option>)\n    }\n\n\n\n    render() {\n        return <div className=\"newproject-container\">\n          {this.state.error && <Error message={this.state.error} />}\n            <div className=\"row\">\n                <section className=\"create-project-form-section col-8 form-group\">\n                    <form className=\"create-project-form\" onSubmit={this.handleSubmit}>\n                        <label className=\"create-project__name-label\">What will your project's name be?</label>\n\n                        <input onChange={this.onProjectNameChange} type=\"text\" id=\"exampleForm2\" className=\"form-control\" /><br />\n\n                        <label className=\"create-project__description-label\" >Describe who should join, and what you aim to achieve</label>\n\n                        <textarea onChange={this.onProjectDescriptionChange} className=\"form-control\" rows=\"5\" id=\"comment\"></textarea>\n\n                        <label className=\"create-project__select-label\">In what city will your meetings be hosted?</label><br />\n\n                        <input onChange={this.onLocationChange} type=\"text\" id=\"exampleForm2\" className=\"form-control\" /><br />\n\n\n                        <label className=\"create-project__select-label\">What is the maximum amount of members you would like to allow?</label><br />\n\n                        <select className=\"create-project__select form-control\" onChange={this.onMaxMembersChange} value={this.state.maxMembers} name=\"agent\" id=\"agent\">\n                            {this.renderDropDown()}\n      \n                        </select> <br />\n\n                        <label className=\"create-project__technologies-label\">What technologies will your project include?</label>\n                        <div className=\"create-project__skills-checkboxes\">\n                            {skills.map(skill => <Checkbox label={skill} handleCheckboxChange={this.toggleCheckbox} key={skill} selected={this.selectedCheckboxes} />)}\n                        </div>\n                        <Button type=\"submit\" color=\"primary\">Save changes</Button>\n                    </form>\n\n\n                    {this.state.error ? <p>You must complete all the fields</p> : null}\n\n                    {this.state.toggleSuccess ? <p>Project added</p> : null}\n\n                </section>\n            </div>\n          \n        </div>\n\n    }\n\n}\n\nexport default CreateProject","import React, { Component } from 'react'\nimport './home.css'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport logic from '../../logic'\nimport ProjectCard from '../project-card/ProjectCard'\nimport CreateProject from '../create-project/CreateProject'\nimport { withRouter, Link } from 'react-router-dom'\nimport Error from '../error/Error'\n\nclass Home extends Component {\n    state = {\n        tabIndex: 0,\n        collabProjects: null,\n        ownProjects: null,\n        savedProjects: null,\n        user: false,\n        error: false\n\n    }\n\n    componentDidMount() {\n        try {\n            logic.listOwnProjects()\n                .then(res => this.setState({ ownProjects: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n                .catch(err => this.setState({ error: err.message }))\n        }\n        try {\n            logic.retrieveUserProfile(this.props.userId)\n                .then(res =>{\n                    this.props.userName(res.name)\n                    this.setState({ user: res, error: false })})\n        } catch (err) {\n            this.setState({ error: err.message })\n\n        }\n    }\n\n    sendToMyProjects = () => {\n        try {\n            return logic.listOwnProjects()\n                .then(res => this.setState({ ownProjects: res, tabIndex: 0, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n\n    }\n\n    handleTabChange = tabIndex => {\n        try {\n            switch (tabIndex) {\n                case 0:\n                    logic.listOwnProjects()\n                        .then(res => this.setState({ ownProjects: res, tabIndex, error: false }))\n                        .catch(err => this.setState({ error: err.message }))\n                    window.scrollTo(0, 0)\n                    break\n                case 1:\n                    logic.listCollaboratingProjects()\n                        .then(res => this.setState({ collabProjects: res, tabIndex, error: false }))\n                        .catch(err => this.setState({ error: err.message }))\n                    window.scrollTo(0, 0)\n                    break\n                case 2:\n                    logic.listSavedProjects()\n                        .then(res => this.setState({ savedProjects: res, tabIndex, error: false }))\n                        .catch(err => this.setState({ error: err.message }))\n                    window.scrollTo(0, 0)\n                    break\n                case 3:\n                    this.setState({ tabIndex, error: false })\n                    window.scrollTo(0, 0)\n                    break\n                default:\n\n            }\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleSearchTag = (query) => {\n\n        const searchQuery = `q=&f=${query}`\n        this.props.history.push(`/explore/${searchQuery}`)\n    }\n\n\n    render() {\n        const { collabProjects, ownProjects, savedProjects, user } = this.state\n        return <div className=\"home-page-container\">\n        {this.state.error && <Error message={this.state.error} />}\n            <Tabs selectedIndex={this.state.tabIndex} onSelect={this.handleTabChange}>\n        \n                <TabList>\n                    <Tab>My Projects</Tab>\n                    <Tab>My Collaborations </Tab>\n                    <Tab>Saved Projects</Tab>\n                    <Tab>Create a project</Tab>\n                </TabList>\n\n                <TabPanel>\n                    <div className=\"home-myprojects-display\">\n                        {ownProjects && (ownProjects.length ? ownProjects.map((project, index) => <ProjectCard from={'home'} userId={this.props.userId} searchTag={this.handleSearchTag} key={index} project={project} />) : <p className=\"no-projects-text\">You don't have any projects. Start searching <Link to='/explore'>now</Link></p>)}\n                    </div>\n                </TabPanel>\n\n                <TabPanel>\n                    <div className=\"home-collaborations-display\">\n                        {collabProjects && (collabProjects.length ? collabProjects.map((project, index) => <ProjectCard userId={this.props.userId} savedProjects={user.savedProjects} searchTag={this.handleSearchTag} key={index} project={project} />) : <p className=\"no-projects-text\">You don't have any projects. Start searching <Link to='/explore'>now</Link></p>)}\n                    </div>\n                </TabPanel>\n\n                <TabPanel>\n                    <div className=\"home-savedprojects-display\">\n                        {savedProjects && (savedProjects.length ? savedProjects.map((project, index) => <ProjectCard userId={this.props.userId} searchTag={this.handleSearchTag} key={index} project={project} />) : <p className=\"no-projects-text\">You don't have any projects. Start searching <Link to='/explore'>now</Link></p>)}\n                    </div>\n                </TabPanel>\n\n                <TabPanel>\n                    <CreateProject backToMyProject={this.sendToMyProjects} />\n                </TabPanel>\n            </Tabs>\n            \n        </div>\n    }\n\n}\n\nexport default withRouter(Home)","import React, { Component } from 'react';\nimport { Button, Collapse } from 'mdbreact';\nimport Checkbox from '../checkbox/Checkbox'\nclass FiltersCollapsible extends Component {\n\n    state = {\n        collapse: false,\n        pendingCollaborators: null\n    }\n\n    toggle = () => {\n        this.setState({ collapse: !this.state.collapse });\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                    <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: \"1rem\" }}>Filters</Button>\n                    <Collapse isOpen={this.state.collapse}>\n                        {this.props.skills.map((skill, index) => <Checkbox label={skill} handleCheckboxChange={this.props.handleCheckboxChange} key={index} selected={this.props.selected} />)}\n                        <h1>Filter by city</h1>\n                        <input className=\"input-group-text search-city-input\" placeholder=\"Add a city\"  type=\"text\" onChange={this.props.onChange} />\n                    </Collapse>\n                </div>\n            </div>\n        );\n    }\n}\nexport default FiltersCollapsible;","import React, { Component } from 'react'\nimport Checkbox from '../checkbox/Checkbox'\nimport './explore.css'\nimport logic from '../../logic'\nimport { withRouter, Link } from 'react-router-dom'\nimport ProjectCard from '../project-card/ProjectCard'\nimport FiltersCollapsible from '../filters-collapsible/FiltersCollapsible'\nimport Error from '../error/Error'\n\nconst skills = [\n    'Angular',\n    'C-Sharp',\n    'Java',\n    'Javascript',\n    'Mongoose',\n    'PHP',\n    'Python',\n    'React',\n    'Ruby',\n    'SQL',\n    'Swift',\n    'Vue',\n]\n\nclass Explore extends Component {\n    state = {\n        searchResults: false,\n        searchQuery: '',\n        cityQuery: '',\n        recommended: '',\n        error: false,\n    }\n    componentWillMount = () => {\n\n        this.selectedCheckboxes = new Set();\n\n    }\n\n    componentDidMount() {\n        try {\n            if (this.props.query !== undefined) {\n                logic.filterProjects(this.props.query)\n                    .then(res => this.setState({ searchResults: res, error: false }))\n                    .catch(err => this.setState({ error: err.message }))\n            }\n            else {\n                logic.retrieveUserProfile(this.props.userId)\n                    .then(res => {\n                        const skill = res.skills\n                        if (skill.length) {\n                            const query = `q=&f=${skill[Math.floor(Math.random() * skill.length)]}&c=`\n                            this.setState({ recommended: query, error: false })\n                        }\n\n                        else {\n                            const query = `q=&f=&c=`\n                            this.setState({ recommended: query, error: false })\n                        }\n                    })\n                    .catch(err => this.setState({ error: err.message }))\n            }\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    queryListen = (query) => {\n        this.setState({ searchQuery: query, error: false })\n    }\n\n    componentWillReceiveProps(props) {\n        try {\n\n            if (props.query !== undefined) {\n                logic.filterProjects(props.query)\n                    .then(res => {\n                        this.setState({ searchResults: res, error: false })\n\n                    })\n                    .catch(err => this.setState({ error: err.message }))\n            }\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    toggleCheckbox = label => {\n\n        if (this.selectedCheckboxes.has(label)) {\n\n            this.selectedCheckboxes.delete(label);\n\n        } else {\n\n            this.selectedCheckboxes.add(label);\n        }\n    }\n\n    onCityFilterChange = event => {\n        const city = event.target.value\n\n        this.setState({ cityQuery: city })\n\n    }\n\n    onSearchNameQueryChange = event => {\n        const searchQuery = event.target.value\n        this.setState({ searchQuery })\n    }\n\n    handleAddToFavourites = (id, action) => {\n        try {\n\n            if (action === 'add') {\n                return logic.saveProject(id, this.props.userId)\n                    .then(() => logic.filterProjects(this.props.query))\n                    .then(res => this.setState({ searchResults: res, error: false }))\n                    .catch(err => this.setState({error: err.message}))\n            }\n            else if (action === 'remove') {\n                return logic.removeSavedProject(id, this.props.userId)\n                    .then(() => logic.filterProjects(this.props.query))\n                    .then(res => this.setState({ searchResults: res, error: false }))\n                    .catch(err => this.setState({error: err.message}))\n            }\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    renderSearchArea = () => {\n        const { searchResults } = this.state\n        if (searchResults) {\n            if (!searchResults.length) return <p>No results found for this query :(</p>\n            else if (searchResults.length) {\n                return searchResults && searchResults.map((project, index) => <ProjectCard addToFavourites={this.handleAddToFavourites} userId={this.props.userId} searchTag={this.handleSearchTag} key={index} project={project} />)\n            }\n        } else {\n            return <p>Not sure what to look for? <Link to={`/explore/${this.state.recommended}`}>Try some of our suggestions</Link></p>\n        }\n\n    }\n\n    handleSubmit = event => {\n\n        event.preventDefault()\n\n        const { searchQuery, cityQuery } = this.state\n        let skillsArray = []\n\n        for (const checkbox of this.selectedCheckboxes) {\n\n            skillsArray.push(checkbox)\n        }\n\n        let query = `q=${searchQuery}&f=${skillsArray.join('+')}&c=${cityQuery}`\n\n\n        this.props.history.push(`/explore/${query}`)\n\n    }\n\n\n    handleSearchTag = (query) => {\n        const searchQuery = `q=&f=${query}`\n        this.props.history.push(`/explore/${searchQuery}`)\n    }\n    render() {\n        return <div className=\"explore-container\">\n           {this.state.error && <Error message={this.state.error} />}\n            <header className=\"explore-header col-12\">\n                <div className=\"searchbar-container col-md-6 col-xs-12\">\n                    <div className=\"explore-search-form\">\n                        <form onSubmit={this.handleSubmit}>\n                            <label className=\"explore-search-form__label\">\n                                <input onChange={this.onSearchNameQueryChange} className=\"input-group-text explore-searchbar\" type=\"text\" placeholder=\"Search by project name\" aria-label=\"Search\" />\n                                <button type=\"submit\" className=\"explore-search-button\">Search</button>\n                            </label>\n                        </form>\n                    </div>\n                </div>\n            </header>\n            <div className=\"filter-skills-mobile\">\n                <FiltersCollapsible skills={skills} handleCheckboxChange={this.toggleCheckbox} selected={this.selectedCheckboxes} onChange={this.onCityFilterChange} />\n            </div>\n            <div className=\"main-explore-area row\">\n                <div className=\"filters col-lg-3 col-s-12\">\n\n                    <h1>What are you looking to learn?</h1>\n\n                    <div className='filter-skills'>\n                        {skills.map((skill, index) => <Checkbox label={skill} handleCheckboxChange={this.toggleCheckbox} key={index} selected={this.selectedCheckboxes} />)}\n                        <h1>Filter by city</h1>\n                        <input className=\"input-group-text search-city-input\" placeholder=\"Add a city\" onChange={this.onCityFilterChange} type=\"text\" />\n                    </div>\n\n\n                </div>\n                <div className=\"search-area-container col-lg-8 col-s-12 \">\n                    <div className=\"search-area  \">\n                        {this.renderSearchArea()}\n                    </div>\n                </div>\n            </div>\n         \n        </div>\n\n    }\n}\n\nexport default withRouter(Explore)","import React from 'react'\nimport './profile-card.css'\nimport { Badge } from 'mdbreact'\nimport Moment from 'react-moment'\n\nconst ProfileCard = props => {\n    const { user, myProjects, collabProjects, showCollabProjects, projectsStarted, uploadImage, userId, meetings, numberOfMeetings, chats, totalPending } = props\n\n    if (user) {\n        const { name, joinDate, city} = user\n\n        return (\n            <div className=\"col-12 profile-card-container\">\n                <div className=\"general-info-container\">\n                    <div className='top-area'>\n                        <div className='top-area-left-section'>\n                            <div className='basic-info'>\n                                <p><span>Name</span>: {name}</p>\n                                <p><span>Joined</span>: <Moment format=\"DD/MM/YYYY\">{joinDate}</Moment></p>\n                                <p><span>Location</span>: {city}</p>\n                            </div>\n                            {(userId === user.id) && <form encType=\"multipart/form-data\" onSubmit={uploadImage}>\n                                <label className=\"profileImage-upload\">\n                                    <input type=\"file\" className=\"uploadImage-input\" name=\"avatar\" onChange={uploadImage} />\n                                    Upload image\n                        </label>\n                            </form>}\n                        </div>\n                        <div className=\"profile-img-container\">\n                            <div className=\"profile-img-box\">\n                            <img className=\"profile-img\" src={user.profileImage} />\n                            </div>\n                    </div>\n                </div>\n\n            </div>\n            <div className='bottom-area'>\n                <button onClick={projectsStarted} type=\"button\" className=\"profile-card-button\" id=\"first-button\" >\n                    Projects started <br /> <Badge color=\"light-blue\" pill >{myProjects ? myProjects.length : 0}</Badge>\n                </button>\n                {(userId === user.id) && <button onClick={showCollabProjects} type=\"button\" className=\"profile-card-button\" >\n                    Projects with pending Collaborators <br /> <Badge color=\"light-blue\" pill >{collabProjects ? collabProjects.length : 0}</Badge>\n                </button>}\n                <button onClick={() => meetings(user.id)} type=\"button\" className=\"profile-card-button\"  >\n                    Upcoming Meetings <br /> <Badge color=\"light-blue\" pill >{numberOfMeetings ? numberOfMeetings : 0}</Badge>\n                </button>\n                {(userId === user.id) && <button onClick={chats} type=\"button\" className=\"profile-card-button\" id=\"last-button\" >\n                    Chats <br /> New messages: <Badge color=\"light-blue\" pill >{totalPending ? totalPending : 0}</Badge>\n                </button>}\n\n            </div>\n            </div >\n        )\n    } else return null\n\n\n}\n\n\n\nexport default ProfileCard","import React, { Component } from 'react'\nimport Checkbox from '../checkbox/Checkbox'\nimport { Button } from 'mdbreact'\nimport './updateprofileform.css'\n\nconst skills = [\n    'Angular',\n    'C-Sharp',\n    'Java',\n    'Javascript',\n    'Mongoose',\n    'PHP',\n    'Python',\n    'React',\n    'Ruby',\n    'SQL',\n    'Swift',\n    'Vue',\n]\nclass UpdateProfileForm extends Component {\n\n    state = {\n        city: this.props.user ? this.props.user.city : '',\n        githubProfile: this.props.user ? this.props.user.githubProfile : '',\n        bio: this.props.user ? this.props.user.bio : '',\n        skills: []\n    }\n\n\n    componentWillReceiveProps(props) {\n\n        if (props.user && !props.toggleModal) {\n            const { city, githubProfile, bio } = props.user\n\n            this.setState({ city, githubProfile, bio })\n        }\n\n    }\n\n    componentWillMount = () => {\n        const { user } = this.props\n        this.selectedCheckboxes = new Set();\n        if (user) {\n            user.skills.forEach(item => this.selectedCheckboxes.add(item) )\n        }\n\n\n    }\n\n    handleSubmit = async event => {\n\n        event.preventDefault()\n\n        let skillsArray = []\n\n        for (const checkbox of this.selectedCheckboxes) {\n\n            skillsArray.push(checkbox)\n        }\n\n        await this.props.updateProfile(this.state.city, this.state.githubProfile, this.state.bio, skillsArray)\n        \n        this.props.toggleModal()\n\n\n\n\n    }\n\n    onCityChange = event => {\n        const city = event.target.value\n\n        this.setState({ city })\n\n    }\n\n    onGithubChange = event => {\n        const githubProfile = event.target.value\n\n        this.setState({ githubProfile })\n    }\n\n    onBioChange = event => {\n        const bio = event.target.value\n\n        this.setState({ bio })\n    }\n\n    toggleCheckbox = label => {\n\n        if (this.selectedCheckboxes.has(label)) {\n\n            this.selectedCheckboxes.delete(label);\n\n        } else {\n\n            this.selectedCheckboxes.add(label);\n        }\n    }\n\n    render() {\n        const { state: { city, githubProfile, bio } } = this\n        return <div>\n            <form onSubmit={this.handleSubmit}>\n                <label>City</label>\n\n                <input onChange={this.onCityChange} defaultValue={city} type=\"text\" id=\"exampleForm2\" className=\"form-control\" />\n\n                <label>Github Profile</label>\n\n                <input onChange={this.onGithubChange} defaultValue={githubProfile} type=\"text\" id=\"exampleForm2\" className=\"form-control\" />\n\n                <label>Bio</label>\n\n                <textarea onChange={this.onBioChange} defaultValue={bio} className=\"form-control rounded-0\" id=\"exampleFormControlTextarea2\" rows=\"3\"></textarea>\n                <div className=\"update-profile-checkboxes-display\">\n                {skills.map(skill => <Checkbox label={skill} handleCheckboxChange={this.toggleCheckbox} key={skill} selected={this.selectedCheckboxes} />)}\n                </div>\n\n                <Button type=\"submit\" color=\"primary\">Save changes</Button>\n            </form>\n        </div>\n    }\n\n}\n\nexport default UpdateProfileForm","import React, { Component } from 'react'\nimport { Container, Button, Modal, ModalBody, ModalHeader, ModalFooter } from 'mdbreact'\nimport './modalpage.css'\nimport UpdateProfileForm from '../update-profile-form/UpdateProfileForm'\n\n\n\nclass Modalpage extends Component {\n    state = {\n        modal: false,\n\n\n\n    }\n\n    toggle = () => {\n\n        this.setState({\n\n            modal: !this.state.modal\n\n        });\n    }\n\n\n    render() {\n\n        const { state: { modal }, props: { user, updateProfile }, toggle } = this\n\n        return (\n            <Container>\n                <div className=\"edit-button-container\">\n                    <button className=\"edit-profile-button\" onClick={toggle}><i className=\"fa fa-edit\" aria-hidden=\"true\"></i> Edit profile</button>\n                </div>\n                <Modal isOpen={modal} toggle={toggle}>\n                    <ModalHeader toggle={toggle}>Edit Profile</ModalHeader>\n                    <ModalBody>\n                        <UpdateProfileForm toggleModal={this.toggle} user={user} updateProfile={updateProfile} />\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"secondary\" onClick={toggle}>Close</Button>{' '}\n                    </ModalFooter>\n                </Modal>\n            </Container>\n        );\n    }\n}\n\nexport default Modalpage","import React, { Component } from 'react'\nimport './profile.css'\nimport logic from '../../logic'\nimport ProfileCard from '../profile-card/ProfileCard'\nimport ProjectCard from '../project-card/ProjectCard'\nimport Modalpage from '../modal/Modalpage'\nimport SkillsTag from '../skills-tag/SkillsTag'\nimport { withRouter, Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport Error from '../error/Error'\nimport MDSpinner from \"react-md-spinner\"\nimport { Button } from 'mdbreact'\n\n\n\nclass Profile extends Component {\n\n    state = {\n        user: null,\n        ownProjects: false,\n        collabProjects: false,\n        upComingMeetings: false,\n        showProjects: 'my projects',\n        image: false,\n        error: false,\n        loading: false,\n        chatPopup: false,\n        chatMessage: '',\n        conversations: false,\n        totalPending: 0\n    }\n\n    componentDidMount() {\n        const { id } = this.props\n        try {\n\n            Promise.all([logic.retrieveUserProfile(id), logic.retrievePendingCollaboratorProjects(id), logic.listOwnProjects(id), logic.retrieveProfileImage(id), logic.userUpcomingMeetings(id), logic.listConversations()])\n                .then(res => {\n                    let total = 0\n                    res[5].forEach(item => total = item[1].pendingMessages + total)\n                    this.setState({ user: res[0], collabProjects: res[1], ownProjects: res[2], image: res[3], upComingMeetings: res[4], conversations: res[5], totalPending: total, error: false })\n                })\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    componentWillReceiveProps(props) {\n\n        const { id } = props\n        try {\n\n            Promise.all([logic.retrieveUserProfile(id), logic.retrievePendingCollaboratorProjects(id), logic.listOwnProjects(id), logic.retrieveProfileImage(id), logic.userUpcomingMeetings(id), logic.listConversations()])\n                .then(res => {\n                    let total = 0\n                    res[5].forEach(item => total = item[1].pendingMessages + total)\n                    this.setState({ user: res[0], collabProjects: res[1], ownProjects: res[2], image: res[3], upComingMeetings: res[4], conversations: res[5], totalPending: total, error: false, chatPopup: false })\n                })\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    sendProfileUpdate = (city, github, bio, skills) => {\n        const { id } = this.props\n\n        try {\n\n            return logic.updateProfile(id, city, github, bio, skills)\n                .then(() => logic.retrieveUserProfile(id))\n                .then(res => {\n                    this.setState({ user: res, error: false })\n                })\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleShowCollabProjects = () => {\n        const { id } = this.props\n        try {\n            return logic.retrievePendingCollaboratorProjects(id)\n                .then(res => this.setState({ collabProjects: res, showProjects: 'collab projects', error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleshowOwnProjects = () => {\n        const { id } = this.props\n        try {\n            return logic.listOwnProjects(id)\n                .then(res => this.setState({ ownProjects: res, showProjects: 'my projects', error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleUpComingMeetings = (id) => {\n        try {\n\n            return logic.userUpcomingMeetings(id)\n                .then(result => this.setState({ upComingMeetings: result, showProjects: 'meetings', error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleShowChats = () => {\n        this.setState({ showProjects: 'chats' })\n    }\n\n    renderTitle = () => {\n\n        const { user, showProjects } = this.state\n\n        if (user) {\n            if (showProjects === 'my projects') {\n                return <h1>{user.name}'s projects</h1>\n            }\n            else if (showProjects === 'collab projects') {\n                return <h1>Projects with pending collaborators</h1>\n            }\n            else if (showProjects === 'meetings') {\n                return <h1>Upcoming Meetings</h1>\n            } else {\n                return <h1>Chats</h1>\n            }\n        }\n    }\n\n    goToMeetingProject = () => {\n\n    }\n\n    handleSearchTag = (query) => {\n\n        const searchQuery = `q=&f=${query}`\n        this.props.history.push(`/explore/${searchQuery}`)\n    }\n\n    handleChatStart = () => {\n        logic.findConversation(this.props.id)\n            .then(res => {\n\n                if (!res) this.setState({ chatPopup: true })\n                else this.props.history.push(`/messages/${res.id}/${this.props.id}`)\n            })\n    }\n\n    onChatMessageChange = (event) => {\n        const message = event.target.value\n        this.setState({ chatMessage: message })\n    }\n\n    handleChatSubmit = (event) => {\n        event.preventDefault()\n\n        const { state: { chatMessage }, props: { userId, id } } = this\n\n        return logic.sendMessage(userId, id, chatMessage)\n            .then(() => logic.findConversation(this.props.id))\n            .then(res => this.props.history.push(`/messages/${res.id}/${this.props.id}`))\n    }\n\n    handleUpload = event => {\n        try {\n            this.setState({ loading: true })\n            return logic.addProfileImage(event.target.files[0])\n                .then(() => this.setState({ loading: false }))\n                .then(() => {\n                    return logic.retrieveUserProfile(this.props.id)\n                        .then(res => {\n                            this.setState({ user: res, error: false })\n                        })\n                })\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    render() {\n        const { state: { user, ownProjects, collabProjects, showProjects, image, upComingMeetings, conversations, totalPending }, props: { id, userId } } = this\n\n\n        return <div className=\"profile-page-container\">\n            {this.state.error && <Error message={this.state.error} />}\n            <div className=\"row\">\n\n                <section className=\"profile-top-area col-md-12  col-lg-4\">\n                    <div className=\"spinner\">{this.state.loading ? <MDSpinner /> : ''}</div>\n                    <ProfileCard uploadImage={this.handleUpload} showCollabProjects={this.handleShowCollabProjects} user={user} myProjects={ownProjects} projectsStarted={this.handleshowOwnProjects} collabProjects={collabProjects} userId={userId} profileImage={image} meetings={this.handleUpComingMeetings} numberOfMeetings={upComingMeetings && upComingMeetings.length} chats={this.handleShowChats} totalPending={totalPending} />\n\n                    <section className=\"bio col-12\">\n                        <div className=\"bio__extra-info col-12\">\n                            {user && (user.id === userId) && <Modalpage className=\"testt\" user={user} updateProfile={this.sendProfileUpdate} />}\n\n                            <p className=\"bio-paragraph\"><span>Bio</span>:{user && user.bio}</p>\n                            <p><span>Github:</span> <a href=\"https://github.com\">{user && user.githubProfile}</a></p>\n                            <div className=\"bio__interests\">\n                                <h2>Interests</h2>\n                                <div className=\"skills-tag-container\">\n                                    {user && user.skills.map((skill, index) => <SkillsTag searchTag={this.handleSearchTag} skill={skill} key={index} />)}\n                                </div>\n                            </div>\n\n                        </div>\n                    </section>\n                    {(id !== userId) ? <Button color=\"primary\" onClick={this.handleChatStart}> Chat with {user && user.name}</Button> : null}\n                    {this.state.chatPopup && <div>\n                        <p>This is your first message with {user && user.name}, make it count!</p>\n                        <form onSubmit={this.handleChatSubmit}>\n                            <textarea onChange={this.onChatMessageChange} className=\"form-control\" rows=\"5\" id=\"comment\"></textarea>\n                            <button className=\"chat-send-button-profile\" type=\"submit\">Send</button>\n                        </form>\n\n                    </div>}\n                </section>\n\n                <section className=\"main-area col-md-12 col-lg-7\">\n                    <div className=\"main-area__title\">\n                        {this.renderTitle()}\n\n                    </div>\n                    <div className=\"main-area__projects\">\n                        {user && (user.id === userId) && ownProjects && (showProjects === 'my projects') && (ownProjects.length ? ownProjects.map((project, index) => <ProjectCard from={'profile'} searchTag={this.handleSearchTag} key={index} project={project} />) : <p className=\"no-projects-text\">You don't have any projects, start one <Link to='/home'>now</Link></p>)}\n\n                        {user && (user.id !== userId) && ownProjects && (showProjects === 'my projects') && (ownProjects.length ? ownProjects.map((project, index) => <ProjectCard from={'profile'} searchTag={this.handleSearchTag} key={index} project={project} />) : <p className=\"no-projects-text\">This user has not started any projects</p>)}\n\n                        {collabProjects && (showProjects === 'collab projects') && (collabProjects.length ? collabProjects.map((project, index) => <ProjectCard from={'profile'} searchTag={this.handleSearchTag} key={index} project={project} />) : <p className=\"no-projects-text\">No pending collaborators</p>)}\n\n                        {upComingMeetings && (showProjects === 'meetings') && (upComingMeetings.length ? upComingMeetings.map((meeting, index) => {\n                            return (<div className=\"profile-meetup-card col-md-8\" key={index}>\n                                <p><b>Description</b>: {meeting.description}</p>\n                                <p><b>Project: </b><Link to={`/project/${meeting.project.id}`}>{meeting.project.name}</Link></p>\n                                <p><b>Location</b>: {meeting.location}</p>\n                                <p><b>Date</b>: <Moment format=\"DD/MM/YYYY HH:mm\">{meeting.date}</Moment></p>\n                                <p>Attending: {meeting.attending.length}</p>\n\n                            </div>)\n                        }) : <p className=\"no-projects-text\">No upcoming meetings</p>)}\n\n                        {conversations && (showProjects === 'chats') && (conversations.length ? conversations.map((conversation, index) => {\n                            return <div key={index} className=\"conversation-card\">\n                                <div className=\"conversation-img-container\">\n                                    <div className=\"conversation-img-box\">\n                                        <img className=\"conversation-img\" alt=\"profile\" src={conversation[0].profileImage} />\n                                    </div>\n                                </div>\n\n                                <Link to={`/messages/${conversation[1].conversationId}/${conversation[0].id}`}>{conversation[0].username}</Link>\n                                <div><span className=\"badge light-blue badge-light-blue badge-pill\">{conversation[1].pendingMessages}</span></div>\n\n                            </div>\n                        }) : <p className=\"no-projects-text\">You don't have any active chats</p>)}\n\n                    </div>\n                </section>\n            </div>\n\n        </div>\n    }\n\n}\n\nexport default withRouter(Profile)","import React from 'react'\nimport { Button } from 'mdbreact'\nimport './pending-collaborators.css'\n\n\nconst PendingCollaborators = props => {\n    const { pendingCollaborators, clickName } = props\n\n    if (pendingCollaborators) {\n        return (\n            \n            <section className=\"pending-collaborator-card\">\n\n                <img src={pendingCollaborators.profileImage} alt=\"profile\" />\n\n                <p onClick={() => clickName(undefined, pendingCollaborators.id)}>{pendingCollaborators.name}</p>\n\n                <Button type=\"button\" onClick={() => props.accept(pendingCollaborators.id)}>Accept</Button>\n\n                <Button type=\"button\" onClick={() => props.reject(pendingCollaborators.id)}>Reject</Button>\n\n            </section >\n        )\n    } else return null\n\n}\n\nexport default PendingCollaborators","import React, { Component } from 'react';\nimport { Button, Collapse } from 'mdbreact';\nimport PendingCollaborators from '../pending-collaborators/PendingCollaborators'\n\nclass Collapsible extends Component {\n\n  state = {\n    collapse: false,\n    pendingCollaborators: null\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.pendingCollabs) this.setState({pendingCollaborators: props.pendingCollabs})\n\n  }\n\n\n\n  render() {\n    const { pendingCollaborators } = this.state\n    return (\n      <div>\n        <div>\n          <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: \"1rem\" }}>Pending Collaboration Requests</Button>\n          <Collapse isOpen={this.state.collapse}>\n            {pendingCollaborators && (pendingCollaborators.length ? pendingCollaborators.map((collaborator, index) => <PendingCollaborators clickName={this.props.clickName} key={index} pendingCollaborators={collaborator} accept={this.props.accept} reject = {this.props.reject}/>) : <p>No collaborators pending</p>)}\n          </Collapse>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Collapsible;","import React from 'react'\nimport { Button } from 'mdbreact'\nimport Moment from 'react-moment'\nconst Meetings = props => {\n\n\n\n    const { meeting, project, userId, attendMeeting, unAttendMeeting } = props\n    if (meeting && project) {\n        return (\n            <div className=\"meeting-actions row\">\n                <div className=\"meeting-details col-8\">\n                    <p><span>Date</span>: <Moment format=\"DD/MM/YYYY\">{meeting.date}</Moment></p>\n                    <p><span>Time</span>: <Moment format=\"HH:mm\">{meeting.date}</Moment></p>\n\n                    <p><span>Description</span>: {meeting.description}</p>\n\n                    <p><span>Location</span>: {meeting.location}</p>\n                </div>\n                <div className=\"meeting-buttons col-3\">\n                    {project && (!(userId === project.owner.id)) && (!meeting.attending.includes(userId)) && (project.collaborators.find(item => item.id === userId) !== undefined) ? <Button color=\"blue\" type=\"button\" onClick={() => attendMeeting(meeting.id)}>Attend</Button> : null}\n\n\n                    {project && (!(userId === project.owner.id)) && (meeting.attending.includes(userId)) ? (\n                        <div>\n                            <Button color=\"red\" onClick={() => unAttendMeeting(meeting.id)} type=\"button\">Cancel Attendance</Button>\n                        </div>\n                    ) : null}\n\n                </div>\n\n            </div>\n        )\n    }\n    else return null\n}\n\nexport default Meetings","import React from 'react'\nimport './collabcard.css'\nconst CollaboratorCard = props => {\n    const { collaborator, clickName, userId, ownerId, removeCollaborator } = props\n\n    if (collaborator) {\n        return (\n            <div className=\"collab-card col-3\">\n                <img src={collaborator.profileImage} alt=\"profile\" />\n                <p onClick={() => clickName(undefined, collaborator.id)}>{collaborator.name}</p>\n                {(userId === ownerId) && <button className=\"remove-collab-button\" onClick={() => removeCollaborator(collaborator.id)}>Remove</button>}\n            </div>\n        )\n    } else return null\n\n}\n\nexport default CollaboratorCard","import React, { Component } from 'react'\nimport logic from '../../logic'\nimport './meeting-attendees.css'\nimport {withRouter, Link} from 'react-router-dom'\nimport Error from '../error/Error'\nclass MeetingAttendees extends Component {\n    state = {\n        meeting: null,\n        error: false\n    }\n\n    componentWillReceiveProps(props) {\n        try {\n\n            logic.retrieveMeetingInfo(props.meetingId)\n            .then(res => this.setState({meeting: res, error: false}))\n            .catch(err => this.setState({error: err.message}))\n        } catch(err) {\n            this.setState({error: err.message})\n        }\n    }\n\n    componentDidMount() {\n        try {\n\n            logic.retrieveMeetingInfo(this.props.meetingId)\n            .then(res => this.setState({meeting: res, error: false}))\n            .catch(err => this.setState({error: err.message}))\n        } catch(err) {\n            this.setState({error: err.message})\n        }\n    }\n\n    render() {\n        const {meeting} = this.state\n        return <div className=\"attendees-list\">\n        {meeting && meeting.attending.map((attendee, index) => <Link to={`/profile/${attendee.id}`}> <p onClick={this.props.clickName} key={index}>{attendee.name}</p></Link>)}\n        {this.state.error && <Error message={this.state.error} />}\n        </div>\n    }\n}\n\nexport default withRouter(MeetingAttendees)","import React, { Component } from 'react'\nimport { Container, Button, Modal, ModalBody, ModalHeader, ModalFooter } from 'mdbreact'\nimport MeetingAttendees from '../meetingAttendees/MeetingAttendees'\n\n\nclass MeetingAttendeesModal extends Component {\n    state = {\n        modal: false,\n    }\n\n    toggle = () => {\n        this.setState({\n\n            modal: !this.state.modal\n\n        });\n    }\n\n\n    render() {\n\n        const { state: { modal }, props: { meetingId }, toggle } = this\n\n        return (\n            <Container>\n                <Button color=\"blue\" onClick={toggle}>View Attendees</Button>\n                <Modal isOpen={modal} toggle={toggle}>\n                    <ModalHeader toggle={toggle}>View Attendees</ModalHeader>\n                    <ModalBody>\n                        <MeetingAttendees clickName={this.clickProfileName} meetingId={meetingId} toggle={toggle}/>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"secondary\" onClick={toggle}>Close</Button>{' '}\n                    </ModalFooter>\n                </Modal>\n            </Container>\n        );\n    }\n}\n\nexport default MeetingAttendeesModal","import React, { Component } from 'react'\nimport logic from '../../logic'\nimport './projectpage.css'\nimport { Button } from 'mdbreact'\nimport Collapsible from '../collapse/Collapse'\nimport Meetings from '../meetings/Meetings'\nimport CollaboratorCard from '../collaborator-card/CollaboratorCard'\nimport { withRouter } from 'react-router-dom'\nimport SkillsTag from '../skills-tag/SkillsTag'\nimport MeetingAttendeesModal from '../meet-attendees-modal/MeetingAttendeesModal'\nimport Error from '../error/Error'\nimport MDSpinner from \"react-md-spinner\"\n\nclass ProjectPage extends Component {\n    state = {\n        project: null,\n        meetings: null,\n        user: null,\n        projectImage: null,\n        commonInterestToggle: false,\n        error: false,\n        loading: false\n    }\n    componentDidMount() {\n        try {\n            return logic.retrieveProjectInfo(this.props.id)\n                .then(res => this.setState({ project: res, error: false }))\n                .then(() => logic.listProjectMeetings(this.props.id))\n                .then(res => this.setState({ meetings: res, error: false }))\n                .then(() => logic.retrieveProjectImage(this.props.userId, this.props.id))\n                .then(res => this.setState({ projectImage: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    acceptCollabHandle = (id) => {\n        try {\n\n            return logic.handleCollaboration(this.state.project.id, 'accept', id)\n                .then(() => logic.retrieveProjectInfo(this.props.id))\n                .then(res => this.setState({ project: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    rejectCollabHandle = (id) => {\n        try {\n\n            return logic.handleCollaboration(this.state.project.id, 'reject', id)\n                .then(() => logic.retrieveProjectInfo(this.props.id))\n                .then(res => this.setState({ project: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleDeleteMeeting = (meetingId) => {\n        try {\n\n            return logic.deleteMeeting(meetingId)\n                .then(() => logic.listProjectMeetings(this.props.id))\n                .then(res => this.setState({ meetings: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleAttendMeeting = (meetingId) => {\n        try {\n\n            return logic.attendMeeting(meetingId)\n                .then(() => logic.listProjectMeetings(this.props.id))\n                .then(res => this.setState({ meetings: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n\n    }\n\n    handleUnAttendMeeting = (meetingId) => {\n        try {\n            return logic.unAttendMeeting(meetingId)\n                .then(() => logic.listProjectMeetings(this.props.id))\n                .then(res => this.setState({ meetings: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleDeleteProject = () => {\n        try {\n\n            const { userId, id } = this.props\n            return logic.deleteProject(userId, id)\n                .then(() => this.props.history.push('/home'))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleLeaveProject = () => {\n        const { id } = this.props\n        try {\n\n            return logic.leaveProject(id)\n                .then(() => logic.retrieveProjectInfo(this.props.id))\n                .then(res => this.setState({ project: res, error: false }))\n                .then(() => logic.listProjectMeetings(this.props.id))\n                .then(res => this.setState({ meetings: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleRequestCollaboration = () => {\n        const { id, userId } = this.props\n        try {\n            return logic.requestCollaboration(id, userId)\n                .then(() => logic.retrieveProjectInfo(this.props.id))\n                .then(res => this.setState({ project: res, error: false }))\n                .catch((err) => this.setState({ error: err.message }))\n\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleCancelCollaboration = () => {\n        const { id, userId } = this.props\n        try {\n            return logic.cancelCollaborationRequest(id, userId)\n                .then(() => logic.retrieveProjectInfo(this.props.id))\n                .then(res => this.setState({ project: res, error: false }))\n                .catch((err) => this.setState({ error: err.message }))\n\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleSaveProject = () => {\n        const { id, userId } = this.props\n        try {\n\n            return logic.saveProject(id, userId)\n                .then(() => logic.retrieveProjectInfo(id))\n                .then(res => this.setState({ project: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n    handleUnFollowProjects = () => {\n        const { id, userId } = this.props\n        try {\n\n            return logic.removeSavedProject(id, userId)\n                .then(() => logic.retrieveProjectInfo(id))\n                .then(res => this.setState({ project: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n\n    handleSearchTag = (query) => {\n\n        const searchQuery = `q=&f=${query}`\n        this.props.history.push(`/explore/${searchQuery}`)\n    }\n\n    handleRemoveCollaborator = (collaboratorId) => {\n        try {\n\n            return logic.removeCollaborator(collaboratorId, this.props.id)\n                .then(() => logic.retrieveProjectInfo(this.props.id))\n                .then(res => this.setState({ project: res, error: false }))\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n\n    renderCollabButtons = () => {\n\n        const { state: { project }, props: { userId } } = this\n        if (project) {\n\n            if (project.collaborators.some(item => item.id === userId)) {\n                return (< div className=\"project-page-new-meeting\">\n                    <Button color=\"red\" onClick={this.handleLeaveProject}>Leave project</Button>\n                </div>)\n            } else if (!project.collaborators.some(item => item.id === userId) && !(project.pendingCollaborators.some(item => item.id === userId))) {\n                return (\n                    < div className=\"project-page-new-meeting\">\n                        <Button color=\"blue\" onClick={this.handleRequestCollaboration}>Collaborate now</Button>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"project-page-request-collaborate\">\n                        <Button color=\"red\" onClick={this.handleCancelCollaboration}>Cancel collaboration request</Button>\n                    </div>\n                )\n            }\n        }\n    }\n\n    clickProfileName = (event, id) => {\n\n        if (!id) this.props.history.push(`/profile/${this.state.project.owner.id}`)\n        else this.props.history.push(`/profile/${id}`)\n\n    }\n\n    calculateCommonInterests = () => {\n        const { project } = this.state\n        if (project) {\n            const res = project.skills.filter(value => -1 !== project.viewerSkills.indexOf(value));\n            if (res.length) return `Matches with ${(res.length / project.viewerSkills.length).toFixed(2) * 100}% of your interests`\n            else return 'does not match with any of your interests :('\n\n        }\n    }\n\n    renderCapacityCircles = () => {\n        const { project } = this.state\n        if (project) {          \n            const arr = []\n            for (var i = 0; i < parseInt(project.maxMembers); i++) arr.push(\n                <i key={i} className=\"fa fa-circle-o\" aria-hidden=\"true\"></i>\n            )\n            \n            for (var i=0; i< parseInt(project.currentMembers); i++) arr[i] = <i key={i} className=\"fa fa-circle\" aria-hidden=\"true\"></i>\n\n            return arr\n          \n        }\n   \n\n     \n    }\n\n    toggleCommonInterests = () => {\n        this.setState({ commonInterestToggle: !this.state.commonInterestToggle })\n    }\n\n    uploadImage = event => {\n        try {\n            this.setState({ loading: true })\n            return logic.addProjectImage(event.target.files[0], this.props.id)\n                .then(() => this.setState({ loading: false }))\n                .then(() => {\n                    return logic.retrieveProjectInfo(this.props.id)\n                        .then(res => this.setState({ project: res, error: false }))\n                        .catch(err => this.setState({ error: err.message }))\n                })\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n\n    }\n\n    renderFavouritesButtons = () => {\n        const { state: { project }, props: { userId, id } } = this\n\n        if (project) {\n            if (project.viewerSavedProjects.includes(id) && !project.collaborators.some(item => item.id === userId)) {\n                return (<div className=\"project-page-new-meeting\">\n                    <button className=\"common-interests-display\" onClick={this.handleUnFollowProjects}><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button>\n                    <p>Project saved</p>\n                </div>)\n            } else if (!(project.viewerSavedProjects.includes(id)) && !project.collaborators.some(item => item.id === userId)) {\n                return (< div className=\"project-page-new-meeting\">\n                    <button className=\"common-interests-display\" onClick={this.handleSaveProject}><i className=\"fa fa-heart-o\" aria-hidden=\"true\"></i></button>\n                    <p>Save project</p>\n                </div>)\n            }\n        }\n    }\n\n    getImageId = () => {\n        if (this.state.project) return this.state.project.projectImage\n    }\n\n    handleAddNewEvent = () => {\n\n        this.props.history.push(`/create-event/${this.props.id}`)\n    }\n\n    render() {\n        const { project, meetings, commonInterestToggle } = this.state\n\n        return <div className=\"project-page-container\">\n            {this.state.error && <Error message={this.state.error} />}\n            <header className=\"project-top-section row\">\n                <div className=\"project-image-container col-md-3\">\n                    <h1 className=\"project-name-mobile\">{project && project.name}</h1>\n                    <div className=\"spinner\">{this.state.loading ? <MDSpinner /> : ''}</div>\n                    <div className=\"container__image--project\">\n                        <div className=\"project__image-box\">\n                            <img className=\"project__image\" alt=\"project\" src={project ? project.projectImage : null} />\n                        </div>\n                    </div>\n                    {project && ((this.props.userId === project.owner.id)) && <form encType=\"multipart/form-data\" onSubmit={this.uploadImage}>\n                        <label className=\"profileImage-upload\">\n                            <input className=\"uploadImage-input\" type=\"file\" name=\"avatar\" onChange={this.uploadImage} />\n                            Edit image\n                            </label>\n                    </form>}\n                </div>\n\n\n                <div className=\"project-page-header-additional-info col-md-4\" align=\"center\">\n                    <h1 className=\"project-name\">{project && project.name}</h1>\n                    <div className=\"owner-photo-and-extra-info row\">\n                        <div className=\"container__image--host-profile\">\n                            <div className=\"host-profile__image-box\">\n                                <img className=\"host-profile__image\" src={project && project.owner.profileImage} alt=\"profile\" />\n                            </div>\n                        </div>\n                        <div className=\"owner-name-and-email col-md-9\">\n                            <span>Hosted by</span><p className=\"project-page-header-additional-info__user-link\" onClick={this.clickProfileName}>{project && project.owner.name}</p>\n                            <span>Host email:</span>{project && project.owner.email}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"project-page-header-collab-and-favourites col-md-5\">\n                    {project && (!(this.props.userId === project.owner.id)) && this.renderCollabButtons()}\n                    {project && (!(this.props.userId === project.owner.id)) && this.renderFavouritesButtons()}\n\n\n                    {project && (this.props.userId === project.owner.id) ? < div className=\"project-page-new-meeting\">\n                        <Button color=\"blue\" onClick={this.handleAddNewEvent}>Add a new event</Button>\n                    </div> : null}\n\n                    {project && (this.props.userId === project.owner.id) ? < div className=\"project-page-new-meeting\">\n                        <Button color=\"red\" onClick={this.handleDeleteProject}>Delete project</Button>\n                    </div> : null}\n                </div>\n\n       \n\n            </header>\n            <section className=\"project-page-main-section-container\">\n                <div className=\"row\">\n                    <div className=\"col-md-5\">\n                        <section className=\"project-page-project-info col-md-12\">\n                            <h2>Project Details</h2>\n                            <h3>Location</h3>\n                            <p>{project && project.location}</p>\n                            <h3>Description</h3>\n                            <p>{project && project.description}</p>\n                            <h3>Capacity</h3>\n                            <p>{project && (project.maxMembers!=project.currentMembers) && this.renderCapacityCircles()}</p>\n                            {project && (project.maxMembers==project.currentMembers) ? <p>Project is full</p> :null}\n                            <h3>Tech stack used</h3>\n                            {project && project.skills.map((skill, index) => <SkillsTag searchTag={this.handleSearchTag} key={index} skill={skill} viewerSkills={project.viewerSkills} />)}\n                            <button onClick={this.toggleCommonInterests} className=\"common-interests-display\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></button><p>{commonInterestToggle && this.calculateCommonInterests()}</p>\n                        </section>\n                        <section className=\"project-page-collaborators col-md-12\">\n                            <h1>Current Collaborators</h1>\n                            <div className=\"project-page-collaborators-display row\">\n                                {project && project.collaborators.length ? project.collaborators.map((collaborator, index) => <CollaboratorCard clickName={this.clickProfileName} collaborator={collaborator} key={index} userId={this.props.userId} ownerId={project.owner.id} removeCollaborator={this.handleRemoveCollaborator} />) : <p>This project currently doesn't have any collaborators</p>}\n                            </div>\n                            {project && (this.props.userId === project.owner.id) ? <section className=\"project-page-pending-collaborators\">\n                                <Collapsible clickName={this.clickProfileName} accept={this.acceptCollabHandle} reject={this.rejectCollabHandle} pendingCollabs={project.pendingCollaborators} />\n                            </section> : null}\n                        </section>\n                    </div>\n\n\n                    <div className=\"current-and-pending-collaborators col-md-6\">\n                        <section className=\"project-page-meetings col-md-12\">\n                            <h2>Upcoming Meetings</h2>\n                            {meetings && meetings.length ? meetings.sort((a, b) => a.realDate - b.realDate).map((meeting, index) => {\n                                return (\n                                    <div className=\"individual-meeting-container col-md-10\" key={index}>\n                                        <Meetings unAttendMeeting={this.handleUnAttendMeeting} attendMeeting={this.handleAttendMeeting} userId={this.props.userId} key={index} meeting={meeting} project={project} />\n\n                                        <MeetingAttendeesModal clickName={this.clickProfileName} meetingId={meeting.id} />\n                                        {(project.owner.id === this.props.userId) && <Button onClick={() => this.handleDeleteMeeting(meeting.id)} color=\"red\">Delete</Button>}\n\n\n                                    </div>)\n                            }) : <p>This event doesn't have any upcoming meetings</p>}\n                        </section>\n                    </div>\n                </div>\n\n            </section>\n\n        </div>\n    }\n}\n\nexport default withRouter(ProjectPage)","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Input } from 'mdbreact'\nimport logic from '../../logic'\nimport { withRouter } from 'react-router-dom'\nimport './create-meeting.css'\nimport Error from '../error/Error'\nclass CreateMeeting extends Component {\n\n    state = {\n        startDate: new Date(),\n        description: '',\n        location: '',\n        error: null,\n\n    };\n\n    handleSubmit = event => {\n        event.preventDefault()\n        const { startDate, description, location } = this.state\n        try {\n            return logic.addMeeting(this.props.userId, this.props.id, startDate, location, description)\n                .then(() => this.props.history.push(`/project/${this.props.id}`))\n                .catch(err => this.setState({error: err.message}))\n        } catch (err) {\n            this.setState({error: err.message})\n        }\n    }\n\n    handleChange = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n\n    onDescriptionChange = event => {\n        event.preventDefault()\n        const description = event.target.value\n        this.setState({ description })\n    }\n\n    onLocationChange = event => {\n        event.preventDefault()\n        const location = event.target.value\n        this.setState({ location })\n    }\n\n    render() {\n        return <div className=\"create-meeting-container col-sm-11 col-md-7\">\n              {this.state.error && <Error message={this.state.error} />}\n            <form onSubmit={this.handleSubmit}>\n                <label>What is the main goal of this meeting?</label>\n\n                <Input type=\"textarea\" onChange={this.onDescriptionChange} id=\"exampleForm2\" className=\"form-control\" rows=\"3\" />\n\n                <label>Location</label>\n\n                <Input onChange={this.onLocationChange} type=\"text\" cid=\"exampleForm2\" className=\"form-control\" />\n\n                <label>Pick a date for your meeting</label> <br />\n                <DatePicker\n                    selected={this.state.startDate}\n                    onChange={this.handleChange}\n                    showTimeSelect\n                    dateFormat=\"Pp\"\n                /> <br />\n                <Button type=\"submit\">Create Meeting</Button>\n            </form>\n      \n        </div >\n    }\n}\n\nexport default withRouter(CreateMeeting)","import React from \"react\";\nimport { Navbar, NavbarBrand, NavbarNav, NavItem, NavbarToggler, Collapse } from \"mdbreact\";\nimport { withRouter, Link } from 'react-router-dom'\nimport logic from '../../logic'\nimport './navbar.css'\n\nclass Navbarpage extends React.Component {\n    state = {\n        isOpen: false,\n        selected: {\n            home: false,\n            explore: false,\n            profile: false,\n\n        },\n        pendingNotifications: 0,\n        sendToConversation: false,\n        name: ''\n\n    };\n\n\n    onLogoClick = () => this.props.history.push('/home')\n\n    onHomeClick = () => {\n        if (this.state.isOpen) this.setState({ isOpen: !this.state.isOpen }, () => this.props.history.push('/home'))\n        else this.props.history.push('/home')\n    }\n\n    onExploreClick = () => {\n        if (this.state.isOpen) this.setState({ isOpen: !this.state.isOpen }, () => this.props.history.push('/explore'))\n        else this.props.history.push('/explore')\n    }\n\n\n    onProfileClick = () => {\n        if (this.state.isOpen) this.setState({ isOpen: !this.state.isOpen }, () => this.props.history.push(`/profile/${this.props.userId}`))\n        else this.props.history.push(`/profile/${this.props.userId}`)\n\n    }\n\n    handleLogout = () => {\n        logic.logout()\n        this.props.history.push('/')\n        this.setState({ name: '' }, () => this.props.history.push('/')\n      \n        )\n        window.location.reload(true)\n    }\n\n\n\n\n\n    renderMessageIcon = () => {\n        const { sendToConversation, pendingNotifications } = this.state\n        if (sendToConversation) {\n            if (sendToConversation.length && pendingNotifications !== 0) {\n                return <Link to={`/messages/${sendToConversation[0][1].conversationId}/${sendToConversation[0][0].id}`}><button className='navbar__button'><div className=\"message-notification-container\"><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><span className=\"badge badge-danger\">{pendingNotifications}</span></div></button></Link>\n            }\n\n            else if (sendToConversation.length && pendingNotifications === 0) {\n                return <Link to={`/messages/${sendToConversation[0][1].conversationId}/${sendToConversation[0][0].id}`}><button className='navbar__button'><div className=\"message-notification-container\"><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i></div></button></Link>\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        debugger\n        logic.listConversations()\n            .then(res => {\n                let total = 0\n                res.forEach(item => total = item[1].pendingMessages + total)\n                this.setState({ sendToConversation: res, pendingNotifications: total })\n            })\n\n\n        logic.retrieveUserProfile(this.props.userId)\n            .then(res => {\n                this.setState({ name: res.name })\n            })\n\n    }\n\n    componentWillReceiveProps(props) {\n\n        logic.listConversations()\n            .then(res => {\n                let total = 0\n                res.forEach(item => total = item[1].pendingMessages + total)\n                this.setState({ sendToConversation: res, pendingNotifications: total })\n            })\n\n\n        logic.retrieveUserProfile(this.props.userId)\n            .then(res => {\n                this.setState({ name: res.name })\n            })\n        if (props.location.pathname.indexOf('home') >= 0) {\n            let newSelected = {\n                home: true,\n                explore: false,\n                profile: false\n            }\n            this.setState({ selected: newSelected })\n        }\n        else if (props.location.pathname.indexOf('explore') >= 0) {\n            let newSelected = {\n                home: false,\n                explore: true,\n                profile: false\n            }\n            this.setState({ selected: newSelected })\n        }\n        else if (props.location.pathname.indexOf('profile') >= 0) {\n            let newSelected = {\n                home: false,\n                explore: false,\n                profile: true\n            }\n            this.setState({ selected: newSelected })\n        }\n        else if (props.location.pathname.indexOf('messages') >= 0) {\n            if (props.pendingNotifications !== this.state.pendingNotifications) {\n\n\n                this.setState({ pendingNotifications: props.pendingNotifications })\n\n            }\n            else {\n                let newSelected = {\n                    home: false,\n                    explore: false,\n                    profile: false\n                }\n                this.setState({ selected: newSelected })\n            }\n        }\n    }\n\n\n\n    toggleCollapse = () => this.setState({ isOpen: !this.state.isOpen })\n\n    render() {\n        const { selected, isOpen } = this.state\n\n        return (\n\n            <Navbar color=\"indigo\" dark expand=\"md\">\n                <NavbarBrand>\n                    <button className=\"navbar__button\" onClick={this.onLogoClick}><strong className=\"white-text\">SocialDev</strong></button>\n                </NavbarBrand>\n                <NavbarToggler\n                    onClick={this.toggleCollapse}\n                />\n                <Collapse\n                    id=\"navbarCollapse3\"\n                    isOpen={isOpen}\n                    navbar\n                >\n                    <NavbarNav>\n                        <NavItem>\n                            <button onClick={this.onHomeClick} className={selected.home ? 'navbar__button-selected' : 'navbar__button'} type=\"button\">Home</button>\n                        </NavItem>\n                        <NavItem >\n                            <button onClick={this.onExploreClick} className={selected.explore ? 'navbar__button-selected' : 'navbar__button'} type=\"button\">Explore</button>\n                        </NavItem>\n                        <NavItem >\n                            <button onClick={this.onProfileClick} className={selected.profile ? 'navbar__button-selected' : 'navbar__button'} type=\"button\">Profile</button>\n                        </NavItem>\n                        <NavItem >\n                            {this.renderMessageIcon()}\n                        </NavItem>\n                        <NavItem >\n                            <span className=\"name\">Welcome {this.state.name ? this.state.name : null}</span>\n                        </NavItem>\n                        <NavItem >\n                            <button onClick={this.handleLogout} className=\"navbar__button\" type=\"button\">Logout</button>\n                        </NavItem>\n                    </NavbarNav>\n\n                </Collapse>\n\n            </Navbar>\n        );\n    }\n}\n\nexport default withRouter(Navbarpage);","import React, { Component } from 'react'\nimport * as ReactDOM from 'react-dom';\nimport './chatpage.css'\nimport logic from '../../logic'\nimport { withRouter, Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport Error from '../error/Error'\nclass ChatPage extends Component {\n\n    state = {\n        message: '',\n        receiverName: '',\n        messages: false,\n        conversations: false,\n        totalPendingMessages: 0,\n        receiverImage: '',\n        error: null\n\n    }\n\n    componentDidMount() {\n\n        try {\n            if (this.props.id && this.props.receiverId) {\n                logic.findConversation(this.props.receiverId)\n                    .then(res => {\n                        const receiver = res.members.find(item => item.id !== this.props.userId)\n                        this.setState({ receiverName: receiver.username, receiverImage: receiver.profileImage, error: null })\n                    })\n                    .then(() => logic.listConversations())\n                    .then(res => {\n                        let total = 0\n                        res.forEach(item => total = item[1].pendingMessages + total)\n\n                        this.props.pendingNotifications(total)\n\n\n                        this.setState({ conversations: res, error: null })\n                    })\n                    .then(() => logic.listMessages(this.props.receiverId))\n                    .then(res => {\n                        this.setState({ messages: [...res.messages], error: null }, () => {\n                            // this.interval = setInterval(() => this.refresh(), 2000)\n                            this.scrollToBottom()\n                        })\n                    })\n\n                    .catch(err => this.setState({ error: err.message }))\n            }\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n\n\n\n    }\n\n    // refresh() {\n    //     clearInterval(this.interval)\n    //     try {\n\n    //         if (this.props.id && this.props.receiverId) {\n    //             logic.listMessages(this.props.receiverId)\n    //                 .then(res => {\n    //                     if (this.state.messages.length !== res.messages.length) this.setState({ messages: [...res.messages], erorr: null }, () => this.scrollToBottom())\n    //                 })\n    //                 .then(() => this.interval = setInterval(() => this.refresh(), 2000))\n    //                 .catch(err => { this.setState({ error: err.message }) })\n    //         }\n\n    //     } catch (err) {\n    //         this.setState({ error: err.message })\n    //     }\n\n    // }\n\n\n    componentWillReceiveProps(nextProps) {\n        try {\n            if (nextProps.receiverId !== this.props.receiverId) {\n                if (nextProps.id && nextProps.receiverId) {\n\n                    logic.findConversation(nextProps.receiverId)\n                        .then(res => {\n                            const receiver = res.members.find(item => item.id !== nextProps.userId)\n                            this.setState({ receiverName: receiver.username, receiverImage: receiver.profileImage, error: null })\n                        })\n                        .then(() => logic.listMessages(nextProps.receiverId))\n                        .then(res => {\n                            this.setState({ messages: [...res.messages], error: null }, () => this.scrollToBottom())\n                        })\n                        .then(() => logic.listConversations())\n                        .then(res => {\n                            let total = 0\n                            res.forEach(item => total = item[1].pendingMessages + total)\n                            this.props.pendingNotifications(total)\n                            this.setState({ conversations: res, totalPendingMessages: total, error: null })\n                        })\n                        .catch(err => this.setState({ error: err.message }))\n\n\n                }\n            }\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    handleSendMessage = (event) => {\n        event.preventDefault()\n        this.props.pendingNotifications(this.state.totalPendingMessages)\n        try {\n            return logic.sendMessage(this.props.userId, this.props.receiverId, this.state.message)\n                .then(() => logic.listMessages(this.props.receiverId))\n                .then(res => this.setState({ messages: res.messages, message: '', error: null }))\n                .then(() => logic.listConversations())\n                .then(res => {\n                    let total = 0\n                    res.forEach(item => total = item[1].pendingMessages + total)\n                    this.props.pendingNotifications(total)\n                    this.setState({ conversations: res, totalPendingMessages: total, error: null })\n                })\n                .catch(err => this.setState({ error: err.message }))\n        } catch (err) {\n            this.setState({ error: err.message })\n        }\n    }\n\n\n    scrollToBottom = () => {\n        const { messageList } = this.refs;\n        const scrollHeight = messageList.scrollHeight;\n        const height = messageList.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        ReactDOM.findDOMNode(messageList).scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n\n    onMessageChange = (event) => {\n        const message = event.target.value\n\n        this.setState({ message })\n    }\n\n    renderMessageTicks = (message) => {\n        if (message.status === 'read') return <div><i className=\"fa fa-check\" aria-hidden=\"true\"></i><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n        else return <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n    }\n\n    render() {\n\n        const { messages, conversations, receiverImage, error } = this.state\n        return <section className=\"chat\">\n            {error && <Error message={error} />}\n            <div className=\"conversation-page-container row\">\n\n                <div className=\"conversations-list col-lg-4 col-xs-12\">\n                    <h2>Chats</h2>\n                    {conversations && conversations.sort((a, b) => b[1].lastMessage - a[1].lastMessage).map((conversation, index) => {\n                        return <div key={index} className={(this.state.receiverName === conversation[0].username) ? \"conversation-card-chatroom-selected\" : \"conversation-card-chatroom\"}>\n                            <img src={conversation[0].profileImage} alt=\"profile\" />\n                            <Link to={`/messages/${conversation[1].conversationId}/${conversation[0].id}`}>{conversation[0].username}</Link>\n                            <span className=\"badge light-blue badge-light-blue badge-pill\">{conversation[1].pendingMessages}</span>\n                        </div>\n                    })}\n                </div>\n                <div className=\"container-chat-and-input col-lg-6 col-xs-12\">\n                    <div className=\"container-chat\">\n                        <div className=\"title\">\n                            <h2><img className=\"profile-image-chat\" alt=\"profile\" src={receiverImage} /> <Link to={`/profile/${this.props.receiverId}`}>{this.state.receiverName}</Link></h2>\n                        </div>\n                        <div id=\"messages\" ref=\"messageList\">\n                            {messages && messages.map((message, index) => {\n\n                                if (message.sender != this.props.userId) {\n                                    return <div key={index} className=\"msg-left\">\n                                        <div className=\"message-body \"> {message.text}</div>\n                                        <div className=\"message-date\">  <Moment format=\"DD/MM/YYYY HH:mm\">{message.sent}</Moment>\n\n                                        </div>\n\n                                    </div>\n                                } else {\n                                    return <div key={index} className=\"msg-right\">\n                                        <div className=\"message-body\"> {message.text}</div>\n                                        <div className=\"message-date-right\">  <Moment format=\"DD/MM/YYYY HH:mm\">{message.sent}</Moment></div>\n                                        {this.renderMessageTicks(message)}\n                                    </div>\n                                }\n                            }\n                            )}\n                        </div>\n\n                    </div>\n                    <div className=\"chatbox col-12\">\n                        <form className=\"chat-input-form\" onSubmit={this.handleSendMessage}>\n                            <div className=\"chat-bottom-area row\">\n                                <div className=\"col-9\">\n                                    <input className=\"chat-input\" onChange={this.onMessageChange} value={this.state.message} placeholder=\"Type your message and hit enter!\" id=\"chat-input\" />\n                                </div>\n                                <div className=\"col-3\">\n                                    <button className=\"chat-send-button\" type=\"submit\">Send</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n\n        </section>\n    }\n\n}\n\nexport default withRouter(ChatPage)\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, withRouter, Redirect, Switch } from 'react-router-dom'\nimport logic from './logic'\nimport Landing from './components/landing/Landing'\nimport Register from './components/register/Register'\nimport Login from './components/login/Login'\nimport Error from './components/error/Error'\nimport Home from './components/home/Home'\nimport Explore from './components/explore/Explore'\nimport Profile from './components/profile/Profile'\nimport ProjectPage from './components/project-page/ProjectPage'\nimport CreateMeeting from './components/create-meetings/CreateMeeting'\nimport Navbarpage from './components/navbar/Navbar'\nimport ChatPage from './components/chatpage/ChatPage'\n\n\n// logic.url = 'http://localhost:5000/api'\nlogic.url = 'https://shielded-chamber-15987.herokuapp.com/api'\n\nclass App extends Component {\n  state = {\n    error: null,\n    userId: null, \n    pendingNotifications: 0,\n    username: ''\n  }\n\n  componentDidMount() {\n\n    this.setState({userId: logic.userId})\n\n  }\n\n  \n\n  handleRegisterClick = () => {\n    this.props.history.push('/register')\n  }\n\n  handleLoginClick = () => {\n    this.props.history.push('/login')\n  }\n\n  handleSkipToLogin = () => {\n    this.props.history.push('login')\n    this.setState({error: null})\n  }\n\n  handleSkipToRegister = () => {\n    this.props.history.push('/register')\n    this.setState({error: null})\n  }\n\n  handleRegister = (name, email, username, password) => {\n\n    try {\n      logic.registerUser(name, email, username, password)\n\n        .then(() => this.setState({ error: null }, this.props.history.push('/login')))\n\n        .catch(err => this.setState({ error: err.message }))\n\n    } catch (err) {\n      \n      this.setState({error: err.message})\n\n    }\n  }\n\n  handleLogin = (username, password) => {\n    try {\n\n      logic.authenticate(username, password)\n\n        .then((res) => {\n\n          this.setState({ error: null, userId: res.data.id }, this.props.history.push('/home'))\n        })\n\n        .catch(err => this.setState({ error: err.message }))\n\n    } catch (err) {\n\n      this.setState({ error: err.message })\n\n    }\n  }\n\n  handleUserName = (name) => {\n    this.setState({username : name})\n  }\n\n\n\n  handlePendingNotifications = (total) => {\n\n    this.setState({pendingNotifications: total})\n  }\n\n  render() {\n\n    const { error, userId, pendingNotifications, username } = this.state\n    return (\n      <div className=\"App\">\n      {logic.loggedIn && <Navbarpage name={username} pendingNotifications={pendingNotifications}  userId={userId} />}\n\n        <Switch>\n          <Route exact path=\"/\" render={() => !logic.loggedIn ? <Landing onRegisterClick={this.handleRegisterClick} onLoginClick={this.handleLoginClick} /> : <Redirect to=\"/home\" />} />\n\n          <Route path=\"/register\" render={() => !logic.loggedIn ? <Register onRegister={this.handleRegister} onSkipToLogin={this.handleSkipToLogin} /> : <Redirect to=\"/home\" />} />\n\n          <Route path=\"/login\" render={() => !logic.loggedIn ? <Login onLogin={this.handleLogin} onSkipToRegister={this.handleSkipToRegister} /> : <Redirect to=\"/home\" />} />\n\n          <Route path=\"/home\" render={() => logic.loggedIn ? <Home userName={this.handleUserName} userId={userId} /> : <Redirect to=\"/\" />} />\n\n          <Route path=\"/explore/:query\" render={props => logic.loggedIn ? <Explore userId={userId} query={props.match.params.query} /> : <Redirect to=\"/explore\" />} />\n\n          <Route path=\"/explore\" render={() => logic.loggedIn ? <Explore userId={userId} /> : <Redirect to=\"/\" />} />\n\n          <Route path=\"/project/:id\" render={props => logic.loggedIn ? <ProjectPage userId={userId} id={props.match.params.id} /> : <Redirect to=\"/\" />} />\n\n          <Route path=\"/profile/:id\" render={props => logic.loggedIn ? <Profile userId={userId} {...props} id={props.match.params.id} /> : <Redirect to=\"/\" />} />\n\n          <Route path=\"/create-event/:id\" render={props => logic.loggedIn ? <CreateMeeting userId={userId} id={props.match.params.id} /> : <Redirect to=\"/\" />} />\n\n          <Route path=\"/messages/:id/:receiverid\" render={props => logic.loggedIn ? <ChatPage pendingNotifications={this.handlePendingNotifications}  userId={userId} receiverId={props.match.params.receiverid} id={props.match.params.id} /> : <Redirect to=\"/\" />} />\n\n\n        </Switch>\n\n        {error && <Error message={error} />}\n        \n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"font-awesome/css/font-awesome.min.css\"\nimport \"bootstrap-css-only/css/bootstrap.min.css\"\nimport \"mdbreact/dist/css/mdb.css\"\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}